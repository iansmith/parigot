---
title: Protobuf schema
description: Protobuf specs for parigot and built in services.
date: _date_
weight: 1
---
{{% pageinfo %}} 

All of this information applies the current version of parigot, `atlanta-0.3.0`.
Versions up to `some_city-1.0.0` carry no backward compatibility guarantees,
promises or anything else to protect you from change.  One may assume that
there will be significant changes in any and all publicly facing APIs and
internal code as well.  

{{% /pageinfo %}}

When these protobuf files are compiled inside the parigot repository, the
results go in the `g/` directory at the top level of the repository.
The `g/` directory contains __only__ generated code and it's content is
always safe to delete since it can be regenerated at any time.

Each method on an RPC service has one input and one output parameter, named
`FooRequest` and `FooResponse` for a method called `Foo`.  This convention is
required by the parigot infrastructure.  Further, each protobuf schema is
suffixed with `v1` so the path to file `queue.proto` is actually
`queue/v1/queue.proto`. These conventions/requirements are [best practices
according to buf](https://buf.build/docs/best-practices/style-guide).

For golang developers, the name of the package generated by the parigot 
code generator is `foo` despite the immediate parent of the schema being
`v1`.  Without this, every use of the API in an import statement would have
to be aliased.