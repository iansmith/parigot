syntax = "proto3";
package syscall.v1;
option go_package="g/syscall/v1;syscallmsg";
import "protosupport/v1/protosupport.proto";
import "google/protobuf/any.proto"; 

// The syscall package does not have a "service" because these are
// _function_  calls made against the kernel of parigot.  
// If you made a kernel service, how would you Locate it without 
// needing a kernel?

// This file defines some error constants for each of the
// built-in (kernel) types.  These are errors that intended to
// be compared against when receiving an error value. The first
// test of the error value is `IsError()` and if that is true
// you can use `ErrorCode()` to get a Uint16 that is the error
// code.  You can compare it to values in these enums at your
// discretion.  
//
// All of the kernel calls return KernelErr as the error code
// inside a KernelErrId.

enum KernelErr{
    option (protosupport.v1.parigot_error) = true;
    NoErr = 0;
    BadThing = 1;
    AwfulThing = 2;
};


// LocateRequest is a read from the kernel of the service id associated with a package, service pair.
message LocateRequest {
    string package_name = 1;
    string service_name = 2;
    protosupport.v1.IdRaw called_by = 3; 

}

// LocateResponse hands back the service Id of the package_name and service_name supplied in the request.
// A service id can be thought of as a (hostname,port) pair that defines which
// service's "location".
message LocateResponse {
    protosupport.v1.IdRaw service_id = 1;
}

// DispatchRequest is a request by a client to invoke a particular method with the parameters provided.
message DispatchRequest {
    protosupport.v1.IdRaw service_id = 1; 
    string method = 2;
    string caller = 3;
    google.protobuf.Any  param = 4;  // inside is another Request object, but we don't know its type
}

// DispatchResponse sent by the server back to a client. It contains the return results generated
// by the implementation of the method.  Note that errors are propagated elsewhere.
message DispatchResponse {
    google.protobuf.Any result = 1; // again, there is a nested response object but we don't know its type
    protosupport.v1.IdRaw call_id = 2;
    protosupport.v1.IdRaw method_id = 3;
}

message ReturnValueRequest{
  protosupport.v1.IdRaw call = 1;
  protosupport.v1.IdRaw method = 2;
  google.protobuf.Any result = 3;
  string marshal_error = 4;
  string exec_error = 6;
  protosupport.v1.IdRaw exec_error_id = 7; 
}

message ReturnValueResponse {
  bool exit_after_use = 8;
}

message BlockUntilCallRequest{
  bool can_timeout= 1;
}

message BlockUntilCallResponse{
  google.protobuf.Any param = 1;
  protosupport.v1.IdRaw method = 2;
  protosupport.v1.IdRaw call = 3;
  bool timed_out = 4;
}

enum MethodDirection {
  METHOD_DIRECTION_UNSPECIFIED = 0;
  METHOD_DIRECTION_IN = 1;
  METHOD_DIRECTION_OUT = 2;
  METHOD_DIRECTION_BOTH = 3;
}

message BindMethodRequest  {
  string proto_package = 1;
  string service = 2;
  string method = 3;
  MethodDirection direction = 4;
}

message BindMethodResponse {
  protosupport.v1.IdRaw method_id = 1;
}

message FullyQualifiedService {
  string package_path = 1;
  string service = 2;
}

message ExportRequest {
  repeated FullyQualifiedService service = 1;
}

message ExportResponse {
}

message RequireRequest {
  repeated FullyQualifiedService dest = 1;
  protosupport.v1.IdRaw source = 2;
}

message RequireResponse {
}

message RunRequest {
  bool wait = 1;
  protosupport.v1.IdRaw service_id = 2;
}

message RunResponse {
}

// ExitRequest is how you can request for your wasm program to exit. In some cases, this will not terminate
// the process because there may be other services running in the same process.
message ExitRequest {
  // valid values here are 0...192 and values>192 or <0 will be set to 192
  int32 code = 1;
}

message ExitResponse{
  int32 code = 1;
}

// Register informs the kernel you are one of the known services
// that can be accessed.  Clients use this so they can participate
// in the dependency graph for startup order.
message RegisterRequest {
    FullyQualifiedService fqs=1;
    bool is_client = 2;
}

message RegisterResponse {
    protosupport.v1.IdRaw id =1;
}
