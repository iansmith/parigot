syntax = "proto3";
package msg.net.v1;
option go_package="g/msg/net/v1;netmsg";
import "msg/protosupport/v1/protosupport.proto";

// This file is the (private) protocol between the remote syscall object in the address space
// of a client program and the nameserver that the remote syscall talks to over the network.  

message ExportInfo {
  string package_path =1;
  string service =2 ;
  string addr=3;
  msg.protosupport.v1.ServiceId service_id= 4;
}
message ExportRequest {
  repeated ExportInfo export = 1;
}

message ExportResponse {
  msg.protosupport.v1.KernelErrorId kernel_err = 1;
  ExportInfo failed = 2;
}

message RequireInfo {
  string package_path =1;
  string service =2 ;
  string addr=3;
}

message RequireRequest {
  repeated RequireInfo require = 1;
}

message RequireResponse {
  msg.protosupport.v1.KernelErrorId kernel_err = 1;
  RequireInfo failed = 2;
}


message CloseServiceRequest {
  string package_path =1;
  string service =2 ;
  string addr=3;
}

message CloseServiceResponse {
  msg.protosupport.v1.KernelErrorId kernel_err = 1;
}

message GetServiceRequest {
  string package_path =1;
  string service =2 ;
}

message GetServiceResponse {
  string addr = 1;
  msg.protosupport.v1.ServiceId sid = 2;
  msg.protosupport.v1.KernelErrorId kernel_err=3;
}

message RunBlockRequest {
  // waiter is true if this thread of control should be waited on to exit
  bool waiter =1;
  string addr= 2;
}

// RunBlockResponse can take several seconds to arrive if you have other
// services that need to start up before the one that sent the request.
message RunBlockResponse {
  msg.protosupport.v1.KernelErrorId err_id = 1;
  bool timed_out = 2;
}


