syntax = "proto3";
package msg.file.v1;
option go_package="github.com/iansmith/parigot/g/msg/file/v1;filemsg";
import "msg/protosupport/v1/protosupport.proto";


message CreateRequest {
  string path  = 1;
}

message OpenRequest {
  string path  = 1;
}

message CloseRequest {
  msg.protosupport.v1.FileId id = 1;
}

message CreateResponse {
    string path = 1;
    // This id might contain an error value.
    msg.protosupport.v1.FileId id = 2;
    bool truncated = 3;
}

message OpenResponse {
    string path = 1;
    // This id might contain an error value.
    msg.protosupport.v1.FileId id = 2;
}

// CloseResponse is not empty because it can return an error. However, there is no
// action that the receiver of this response can take other than perhaps issuing a warning
// to the system operators.
message CloseResponse {
  // This will be NoError or some error code, not a handle to an open file.
  msg.protosupport.v1.FileId id = 1;
}

// LoadTestDataRequest loads the contents of given directory from the _host_ file system into the /app directory
// of the test filesystem (in memory).   This is only intended to be use for test code.
message LoadTestDataRequest {
    // path is a path to a directory on the _host_ filesystem that is to be loaded in /app
    string path = 1;
    // where this new file will exist in the in-memory filesystem... this path
    // will be cleaned lexically and then joined to /app.  Note that it is possible
    // create paths with this parameter that cannot be opened because of
    // restrictions on the path in open.
    string mount_location = 2;
    // returnOnFail should be set to true if you do NOT want the normal behavior of using panic on error.
    // If this value is set to true, the paths that cause an error on import are return in the TestDataResponse.
    bool return_on_fail = 3;
}

// LoadTestDataResponse contains a list of paths that caused an error during loading. This value is only
// returned if the LoadRequest has the returnOnFail set to true.  If LoadDataRequest.return_on_fail is
// false since by definition the error_path will be empty.
message LoadTestDataResponse {
  repeated string error_path = 1;
}
