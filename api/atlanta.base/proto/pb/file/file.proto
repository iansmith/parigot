syntax = "proto3";
package pb.file;
option go_package="github.com/iansmith/parigot/api/proto/g/pb/file;file";
import "pb/protosupport/protosupport.proto";


message CreateRequest {
  string path  = 1;
}

message OpenRequest {
  string path  = 1;
}

message CloseRequest {
  protosupport.FileId id = 1;
}

message CreateResponse {
    string path = 1;
    // This id might contain an error value.
    protosupport.FileId id = 2;
    bool truncated = 3;
}

message OpenResponse {
    string path = 1;
    // This id might contain an error value.
    protosupport.FileId id = 2;
}

// CloseResponse is not empty because it can return an error. However, there is no
// action that the receiver of this response can take other than perhaps issuing a warning
// to the system operators.
message CloseResponse {
  // This will be NoError or some error code, not a handle to an open file.
  protosupport.FileId id = 1;
}

// LoadRequest loads the contents of given directory from the _host_ file system into the /app directory
// of the test filesystem (in memory).   This is only intended to be use for test code.
message LoadRequest {
    // path is a path to a directory on the _host_ filesystem that is to be loaded in /app
    string path = 1;
    // returnOnFail should be set to true if you do NOT want the normal behavior of using panic on error.
    // If this value is set to true, the paths that cause an error on import are return in the TestDataResponse.
    bool return_on_fail = 2;
}

// LoadResponse contains a list of paths that caused an error during loading. This value is only
// returned if the LoadRequest has the returnOnFail set to true.  If LoadRequest.return_on_fail is
// false since by definition the error_path will be empty.
message LoadResponse {
  repeated string error_path = 1;
}
