// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pb/net/ns.proto

package net

import (
	protosupport "github.com/iansmith/parigot/api/proto/g/pb/protosupport"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExportInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackagePath string                  `protobuf:"bytes,1,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	Service     string                  `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Addr        string                  `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	ServiceId   *protosupport.ServiceId `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *ExportInfo) Reset() {
	*x = ExportInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportInfo) ProtoMessage() {}

func (x *ExportInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportInfo.ProtoReflect.Descriptor instead.
func (*ExportInfo) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{0}
}

func (x *ExportInfo) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *ExportInfo) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ExportInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ExportInfo) GetServiceId() *protosupport.ServiceId {
	if x != nil {
		return x.ServiceId
	}
	return nil
}

type ExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export []*ExportInfo `protobuf:"bytes,1,rep,name=export,proto3" json:"export,omitempty"`
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{1}
}

func (x *ExportRequest) GetExport() []*ExportInfo {
	if x != nil {
		return x.Export
	}
	return nil
}

type ExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelErr *protosupport.KernelErrorId `protobuf:"bytes,1,opt,name=kernel_err,json=kernelErr,proto3" json:"kernel_err,omitempty"`
	Failed    *ExportInfo                 `protobuf:"bytes,2,opt,name=failed,proto3" json:"failed,omitempty"`
}

func (x *ExportResponse) Reset() {
	*x = ExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportResponse) ProtoMessage() {}

func (x *ExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportResponse.ProtoReflect.Descriptor instead.
func (*ExportResponse) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{2}
}

func (x *ExportResponse) GetKernelErr() *protosupport.KernelErrorId {
	if x != nil {
		return x.KernelErr
	}
	return nil
}

func (x *ExportResponse) GetFailed() *ExportInfo {
	if x != nil {
		return x.Failed
	}
	return nil
}

type RequireInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackagePath string `protobuf:"bytes,1,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	Service     string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Addr        string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *RequireInfo) Reset() {
	*x = RequireInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequireInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequireInfo) ProtoMessage() {}

func (x *RequireInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequireInfo.ProtoReflect.Descriptor instead.
func (*RequireInfo) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{3}
}

func (x *RequireInfo) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *RequireInfo) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *RequireInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type RequireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Require []*RequireInfo `protobuf:"bytes,1,rep,name=require,proto3" json:"require,omitempty"`
}

func (x *RequireRequest) Reset() {
	*x = RequireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequireRequest) ProtoMessage() {}

func (x *RequireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequireRequest.ProtoReflect.Descriptor instead.
func (*RequireRequest) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{4}
}

func (x *RequireRequest) GetRequire() []*RequireInfo {
	if x != nil {
		return x.Require
	}
	return nil
}

type RequireResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelErr *protosupport.KernelErrorId `protobuf:"bytes,1,opt,name=kernel_err,json=kernelErr,proto3" json:"kernel_err,omitempty"`
	Failed    *RequireInfo                `protobuf:"bytes,2,opt,name=failed,proto3" json:"failed,omitempty"`
}

func (x *RequireResponse) Reset() {
	*x = RequireResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequireResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequireResponse) ProtoMessage() {}

func (x *RequireResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequireResponse.ProtoReflect.Descriptor instead.
func (*RequireResponse) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{5}
}

func (x *RequireResponse) GetKernelErr() *protosupport.KernelErrorId {
	if x != nil {
		return x.KernelErr
	}
	return nil
}

func (x *RequireResponse) GetFailed() *RequireInfo {
	if x != nil {
		return x.Failed
	}
	return nil
}

type CloseServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackagePath string `protobuf:"bytes,1,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	Service     string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Addr        string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *CloseServiceRequest) Reset() {
	*x = CloseServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseServiceRequest) ProtoMessage() {}

func (x *CloseServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseServiceRequest.ProtoReflect.Descriptor instead.
func (*CloseServiceRequest) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{6}
}

func (x *CloseServiceRequest) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *CloseServiceRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CloseServiceRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type CloseServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelErr *protosupport.KernelErrorId `protobuf:"bytes,1,opt,name=kernel_err,json=kernelErr,proto3" json:"kernel_err,omitempty"`
}

func (x *CloseServiceResponse) Reset() {
	*x = CloseServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseServiceResponse) ProtoMessage() {}

func (x *CloseServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseServiceResponse.ProtoReflect.Descriptor instead.
func (*CloseServiceResponse) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{7}
}

func (x *CloseServiceResponse) GetKernelErr() *protosupport.KernelErrorId {
	if x != nil {
		return x.KernelErr
	}
	return nil
}

type GetServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackagePath string `protobuf:"bytes,1,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	Service     string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *GetServiceRequest) Reset() {
	*x = GetServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRequest) ProtoMessage() {}

func (x *GetServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRequest.ProtoReflect.Descriptor instead.
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{8}
}

func (x *GetServiceRequest) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *GetServiceRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type GetServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr      string                      `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Sid       *protosupport.ServiceId     `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	KernelErr *protosupport.KernelErrorId `protobuf:"bytes,3,opt,name=kernel_err,json=kernelErr,proto3" json:"kernel_err,omitempty"`
}

func (x *GetServiceResponse) Reset() {
	*x = GetServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceResponse) ProtoMessage() {}

func (x *GetServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceResponse.ProtoReflect.Descriptor instead.
func (*GetServiceResponse) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{9}
}

func (x *GetServiceResponse) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *GetServiceResponse) GetSid() *protosupport.ServiceId {
	if x != nil {
		return x.Sid
	}
	return nil
}

func (x *GetServiceResponse) GetKernelErr() *protosupport.KernelErrorId {
	if x != nil {
		return x.KernelErr
	}
	return nil
}

type RunBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// waiter is true if this thread of control should be waited on to exit
	Waiter bool   `protobuf:"varint,1,opt,name=waiter,proto3" json:"waiter,omitempty"`
	Addr   string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *RunBlockRequest) Reset() {
	*x = RunBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunBlockRequest) ProtoMessage() {}

func (x *RunBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunBlockRequest.ProtoReflect.Descriptor instead.
func (*RunBlockRequest) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{10}
}

func (x *RunBlockRequest) GetWaiter() bool {
	if x != nil {
		return x.Waiter
	}
	return false
}

func (x *RunBlockRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// RunBlockResponse can take several seconds to arrive if you have other
// services that need to start up before the one that sent the request.
type RunBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrId    *protosupport.KernelErrorId `protobuf:"bytes,1,opt,name=err_id,json=errId,proto3" json:"err_id,omitempty"`
	TimedOut bool                        `protobuf:"varint,2,opt,name=timed_out,json=timedOut,proto3" json:"timed_out,omitempty"`
}

func (x *RunBlockResponse) Reset() {
	*x = RunBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_net_ns_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunBlockResponse) ProtoMessage() {}

func (x *RunBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_net_ns_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunBlockResponse.ProtoReflect.Descriptor instead.
func (*RunBlockResponse) Descriptor() ([]byte, []int) {
	return file_pb_net_ns_proto_rawDescGZIP(), []int{11}
}

func (x *RunBlockResponse) GetErrId() *protosupport.KernelErrorId {
	if x != nil {
		return x.ErrId
	}
	return nil
}

func (x *RunBlockResponse) GetTimedOut() bool {
	if x != nil {
		return x.TimedOut
	}
	return false
}

var File_pb_net_ns_proto protoreflect.FileDescriptor

var file_pb_net_ns_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x70, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x1a, 0x22, 0x70, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01,
	0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x6e,
	0x65, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x7b, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x09, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x22, 0x5e, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x22, 0x3f, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x22, 0x7d, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x5f, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x09, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x45, 0x72, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x22, 0x66, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x55, 0x0a, 0x14, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x09, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x45, 0x72,
	0x72, 0x22, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x2c,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0a,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64,
	0x52, 0x09, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x22, 0x3d, 0x0a, 0x0f, 0x52,
	0x75, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x61, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x77, 0x61, 0x69, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x66, 0x0a, 0x10, 0x52, 0x75,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x4f,
	0x75, 0x74, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x68, 0x2f, 0x70, 0x61, 0x72, 0x69, 0x67, 0x6f,
	0x74, 0x2f, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x6e, 0x65, 0x74, 0x3b, 0x6e, 0x65, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_net_ns_proto_rawDescOnce sync.Once
	file_pb_net_ns_proto_rawDescData = file_pb_net_ns_proto_rawDesc
)

func file_pb_net_ns_proto_rawDescGZIP() []byte {
	file_pb_net_ns_proto_rawDescOnce.Do(func() {
		file_pb_net_ns_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_net_ns_proto_rawDescData)
	})
	return file_pb_net_ns_proto_rawDescData
}

var file_pb_net_ns_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pb_net_ns_proto_goTypes = []interface{}{
	(*ExportInfo)(nil),                 // 0: pb.net.ExportInfo
	(*ExportRequest)(nil),              // 1: pb.net.ExportRequest
	(*ExportResponse)(nil),             // 2: pb.net.ExportResponse
	(*RequireInfo)(nil),                // 3: pb.net.RequireInfo
	(*RequireRequest)(nil),             // 4: pb.net.RequireRequest
	(*RequireResponse)(nil),            // 5: pb.net.RequireResponse
	(*CloseServiceRequest)(nil),        // 6: pb.net.CloseServiceRequest
	(*CloseServiceResponse)(nil),       // 7: pb.net.CloseServiceResponse
	(*GetServiceRequest)(nil),          // 8: pb.net.GetServiceRequest
	(*GetServiceResponse)(nil),         // 9: pb.net.GetServiceResponse
	(*RunBlockRequest)(nil),            // 10: pb.net.RunBlockRequest
	(*RunBlockResponse)(nil),           // 11: pb.net.RunBlockResponse
	(*protosupport.ServiceId)(nil),     // 12: pb.protosupport.ServiceId
	(*protosupport.KernelErrorId)(nil), // 13: pb.protosupport.KernelErrorId
}
var file_pb_net_ns_proto_depIdxs = []int32{
	12, // 0: pb.net.ExportInfo.service_id:type_name -> pb.protosupport.ServiceId
	0,  // 1: pb.net.ExportRequest.export:type_name -> pb.net.ExportInfo
	13, // 2: pb.net.ExportResponse.kernel_err:type_name -> pb.protosupport.KernelErrorId
	0,  // 3: pb.net.ExportResponse.failed:type_name -> pb.net.ExportInfo
	3,  // 4: pb.net.RequireRequest.require:type_name -> pb.net.RequireInfo
	13, // 5: pb.net.RequireResponse.kernel_err:type_name -> pb.protosupport.KernelErrorId
	3,  // 6: pb.net.RequireResponse.failed:type_name -> pb.net.RequireInfo
	13, // 7: pb.net.CloseServiceResponse.kernel_err:type_name -> pb.protosupport.KernelErrorId
	12, // 8: pb.net.GetServiceResponse.sid:type_name -> pb.protosupport.ServiceId
	13, // 9: pb.net.GetServiceResponse.kernel_err:type_name -> pb.protosupport.KernelErrorId
	13, // 10: pb.net.RunBlockResponse.err_id:type_name -> pb.protosupport.KernelErrorId
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pb_net_ns_proto_init() }
func file_pb_net_ns_proto_init() {
	if File_pb_net_ns_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_net_ns_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequireInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequireResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_net_ns_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_net_ns_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_net_ns_proto_goTypes,
		DependencyIndexes: file_pb_net_ns_proto_depIdxs,
		MessageInfos:      file_pb_net_ns_proto_msgTypes,
	}.Build()
	File_pb_net_ns_proto = out.File
	file_pb_net_ns_proto_rawDesc = nil
	file_pb_net_ns_proto_goTypes = nil
	file_pb_net_ns_proto_depIdxs = nil
}
