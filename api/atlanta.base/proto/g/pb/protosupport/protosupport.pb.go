// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pb/protosupport/protosupport.proto

package protosupport

import (
	log "github.com/iansmith/parigot/api/proto/g/pb/log"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KernelErrorId is used to signal errors that occured inside the operating environment
// itself.  When one of these errors is returned, typically the processing along that
// path of control should terminate.
type KernelErrorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High uint64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *KernelErrorId) Reset() {
	*x = KernelErrorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelErrorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelErrorId) ProtoMessage() {}

func (x *KernelErrorId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelErrorId.ProtoReflect.Descriptor instead.
func (*KernelErrorId) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{0}
}

func (x *KernelErrorId) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *KernelErrorId) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

// DeveloperErrorId is used to signal errors that are defined by the developer.
type DeveloperErrorId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High uint64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *DeveloperErrorId) Reset() {
	*x = DeveloperErrorId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeveloperErrorId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeveloperErrorId) ProtoMessage() {}

func (x *DeveloperErrorId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeveloperErrorId.ProtoReflect.Descriptor instead.
func (*DeveloperErrorId) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{1}
}

func (x *DeveloperErrorId) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *DeveloperErrorId) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

// ServiceId is a type of Id that is given to _clients_ of a particular service.  With this
// information (really, capability) the holder of the ServiceId can make calls on the methods
// of that service.  In unixish terms, this id might be the equivalent of a hostname and port pair.
type ServiceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High uint64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *ServiceId) Reset() {
	*x = ServiceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceId) ProtoMessage() {}

func (x *ServiceId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceId.ProtoReflect.Descriptor instead.
func (*ServiceId) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceId) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *ServiceId) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

// DeveloperId is a type of Id that is defined by the developer.
type DeveloperId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High uint64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *DeveloperId) Reset() {
	*x = DeveloperId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeveloperId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeveloperId) ProtoMessage() {}

func (x *DeveloperId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeveloperId.ProtoReflect.Descriptor instead.
func (*DeveloperId) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{3}
}

func (x *DeveloperId) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *DeveloperId) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

// MethodId is a type of Id that is given to _implementations_ of a particular service.  A "server"
// for a service will have one MethodId for each method that it can respond to. The kernel
// will inform the server which method was called by using a MethodId.  In unixish terms,
// this id might be the equivalent of a "handler" in a web server that handles a particular
// type of request.
type MethodId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High uint64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *MethodId) Reset() {
	*x = MethodId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodId) ProtoMessage() {}

func (x *MethodId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodId.ProtoReflect.Descriptor instead.
func (*MethodId) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{4}
}

func (x *MethodId) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *MethodId) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

// CallId is an id given to the implementations of methods of a service.  This id represents
// a particular call instance, e.g. a single call from a single client program.  There may be
// many CallIds outstanding at any given time for a service or for any method of that service.
// The kernel uses the CallId to distinguish between different invocations of a given method.
// In unixish terms, this might be the equivalent of a connected file descriptor on a
// socket that will be closed when the single method invocation ends.
type CallId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High uint64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  uint64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *CallId) Reset() {
	*x = CallId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallId) ProtoMessage() {}

func (x *CallId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallId.ProtoReflect.Descriptor instead.
func (*CallId) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{5}
}

func (x *CallId) GetHigh() uint64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *CallId) GetLow() uint64 {
	if x != nil {
		return x.Low
	}
	return 0
}

// PCtx is the protobuf level version of lib.Pctx.  User code can use lib.Pctx (a
// wrapper around this type) to capture logs and other activities that occur during the processing
// they perform.  A PCtx also includes a key/value store based on strings to allow various
// subsystems to pass data to each other as a single request is processed.  For example,
// a userService may put a UserId into the key/value store so that "downstream" calls will
// already have the user id prepared for them.  This is broadly similar to the
// context.Context in go, although more highly structured.
type PCtx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Although this typed as PCtxMessage we are assuming that only the "event" field
	// is actually filled in ... it makes no sense to just have a single line as your "whole log"
	Event *PCtxMessage      `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Entry map[string]string `protobuf:"bytes,2,rep,name=entry,proto3" json:"entry,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Open  *PCtxMessage      `protobuf:"bytes,3,opt,name=open,proto3" json:"open,omitempty"`
}

func (x *PCtx) Reset() {
	*x = PCtx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCtx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCtx) ProtoMessage() {}

func (x *PCtx) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCtx.ProtoReflect.Descriptor instead.
func (*PCtx) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{6}
}

func (x *PCtx) GetEvent() *PCtxMessage {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *PCtx) GetEntry() map[string]string {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *PCtx) GetOpen() *PCtxMessage {
	if x != nil {
		return x.Open
	}
	return nil
}

// PCtxEvent represents an event that occurred during the processing of a call. This event
// is recorded (the message) and then future log messages will accumulate "into" that event
// until that event is closed. A good use of PCtxEvent is to indicate that a network call was
// made to another service.
type PCtxEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Line    []*PCtxMessage `protobuf:"bytes,2,rep,name=line,proto3" json:"line,omitempty"`
	Parent  *PCtxMessage   `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *PCtxEvent) Reset() {
	*x = PCtxEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCtxEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCtxEvent) ProtoMessage() {}

func (x *PCtxEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCtxEvent.ProtoReflect.Descriptor instead.
func (*PCtxEvent) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{7}
}

func (x *PCtxEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PCtxEvent) GetLine() []*PCtxMessage {
	if x != nil {
		return x.Line
	}
	return nil
}

func (x *PCtxEvent) GetParent() *PCtxMessage {
	if x != nil {
		return x.Parent
	}
	return nil
}

// PCtxMessage is just a simple log message or a nested PctxEvent.  This different from a normal
// log message in that it can participate in the PCtxEvent and PCtx scheme mentioned above to
// capture log messages across the entire chain of calls used to process a single request.
type PCtxMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stamp    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=stamp,proto3" json:"stamp,omitempty"`
	Level    log.LogLevel           `protobuf:"varint,2,opt,name=level,proto3,enum=pb.log.LogLevel" json:"level,omitempty"`
	Producer string                 `protobuf:"bytes,3,opt,name=producer,proto3" json:"producer,omitempty"`
	Message  string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Event    *PCtxEvent             `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *PCtxMessage) Reset() {
	*x = PCtxMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_protosupport_protosupport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCtxMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCtxMessage) ProtoMessage() {}

func (x *PCtxMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protosupport_protosupport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCtxMessage.ProtoReflect.Descriptor instead.
func (*PCtxMessage) Descriptor() ([]byte, []int) {
	return file_pb_protosupport_protosupport_proto_rawDescGZIP(), []int{8}
}

func (x *PCtxMessage) GetStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Stamp
	}
	return nil
}

func (x *PCtxMessage) GetLevel() log.LogLevel {
	if x != nil {
		return x.Level
	}
	return log.LogLevel(0)
}

func (x *PCtxMessage) GetProducer() string {
	if x != nil {
		return x.Producer
	}
	return ""
}

func (x *PCtxMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PCtxMessage) GetEvent() *PCtxEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

var file_pb_protosupport_protosupport_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         543211,
		Name:          "pb.protosupport.no_package",
		Tag:           "varint,543211,opt,name=no_package",
		Filename:      "pb/protosupport/protosupport.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         543214,
		Name:          "pb.protosupport.kernel_service",
		Tag:           "varint,543214,opt,name=kernel_service",
		Filename:      "pb/protosupport/protosupport.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         543210,
		Name:          "pb.protosupport.wasm_service_name",
		Tag:           "bytes,543210,opt,name=wasm_service_name",
		Filename:      "pb/protosupport/protosupport.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         543210,
		Name:          "pb.protosupport.wasm_method_name",
		Tag:           "bytes,543210,opt,name=wasm_method_name",
		Filename:      "pb/protosupport/protosupport.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         543212,
		Name:          "pb.protosupport.abi_call",
		Tag:           "varint,543212,opt,name=abi_call",
		Filename:      "pb/protosupport/protosupport.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         543210,
		Name:          "pb.protosupport.wasm_field_name",
		Tag:           "bytes,543210,opt,name=wasm_field_name",
		Filename:      "pb/protosupport/protosupport.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         543210,
		Name:          "pb.protosupport.abi",
		Tag:           "varint,543210,opt,name=abi",
		Filename:      "pb/protosupport/protosupport.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         543210,
		Name:          "pb.protosupport.wasm_message_name",
		Tag:           "bytes,543210,opt,name=wasm_message_name",
		Filename:      "pb/protosupport/protosupport.proto",
	},
}

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional bool no_package = 543211;
	E_NoPackage = &file_pb_protosupport_protosupport_proto_extTypes[0]
	// optional bool kernel_service = 543214;
	E_KernelService = &file_pb_protosupport_protosupport_proto_extTypes[1]
	// optional string wasm_service_name = 543210;
	E_WasmServiceName = &file_pb_protosupport_protosupport_proto_extTypes[2]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional string wasm_method_name = 543210;
	E_WasmMethodName = &file_pb_protosupport_protosupport_proto_extTypes[3]
	// optional bool abi_call = 543212;
	E_AbiCall = &file_pb_protosupport_protosupport_proto_extTypes[4]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional string wasm_field_name = 543210;
	E_WasmFieldName = &file_pb_protosupport_protosupport_proto_extTypes[5]
)

// Extension fields to descriptorpb.FileOptions.
var (
	// optional bool abi = 543210;
	E_Abi = &file_pb_protosupport_protosupport_proto_extTypes[6]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional string wasm_message_name = 543210;
	E_WasmMessageName = &file_pb_protosupport_protosupport_proto_extTypes[7]
)

var File_pb_protosupport_protosupport_proto protoreflect.FileDescriptor

var file_pb_protosupport_protosupport_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x62, 0x2f, 0x6c, 0x6f, 0x67,
	0x2f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0d, 0x4b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6c, 0x6f,
	0x77, 0x22, 0x38, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x22, 0x31, 0x0a, 0x09, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x22, 0x33,
	0x0a, 0x0b, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x68, 0x69, 0x67,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6c, 0x6f, 0x77, 0x22, 0x30, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6c, 0x6f, 0x77, 0x22, 0x2e, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6c, 0x6f, 0x77, 0x22, 0xde, 0x01, 0x0a, 0x04, 0x50, 0x43, 0x74, 0x78, 0x12, 0x32,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x50, 0x43, 0x74, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x50, 0x43, 0x74, 0x78, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x43, 0x74, 0x78, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x1a, 0x38, 0x0a, 0x0a,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x50, 0x43, 0x74, 0x78, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50,
	0x43, 0x74, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x50, 0x43, 0x74, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x0b, 0x50, 0x43, 0x74, 0x78, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x6c, 0x6f, 0x67,
	0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x43, 0x74, 0x78, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x3a, 0x43, 0x0a, 0x0a, 0x6e, 0x6f, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xeb, 0x93, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x6e, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x4b, 0x0a,
	0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xee, 0x93, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x50, 0x0a, 0x11, 0x77, 0x61,
	0x73, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xea, 0x93, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x61, 0x73, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x4d, 0x0a, 0x10,
	0x77, 0x61, 0x73, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xea, 0x93, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x61, 0x73, 0x6d, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x3e, 0x0a, 0x08, 0x61,
	0x62, 0x69, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xec, 0x93, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x61, 0x62, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x3a, 0x4a, 0x0a, 0x0f, 0x77,
	0x61, 0x73, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xea, 0x93,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x73, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x33, 0x0a, 0x03, 0x61, 0x62, 0x69, 0x12, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xea, 0x93, 0x21,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x62, 0x69, 0x88, 0x01, 0x01, 0x3a, 0x50, 0x0a, 0x11,
	0x77, 0x61, 0x73, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xea, 0x93, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x61, 0x73, 0x6d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x46,
	0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x74, 0x68, 0x2f, 0x70, 0x61, 0x72, 0x69, 0x67, 0x6f, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_protosupport_protosupport_proto_rawDescOnce sync.Once
	file_pb_protosupport_protosupport_proto_rawDescData = file_pb_protosupport_protosupport_proto_rawDesc
)

func file_pb_protosupport_protosupport_proto_rawDescGZIP() []byte {
	file_pb_protosupport_protosupport_proto_rawDescOnce.Do(func() {
		file_pb_protosupport_protosupport_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_protosupport_protosupport_proto_rawDescData)
	})
	return file_pb_protosupport_protosupport_proto_rawDescData
}

var file_pb_protosupport_protosupport_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pb_protosupport_protosupport_proto_goTypes = []interface{}{
	(*KernelErrorId)(nil),               // 0: pb.protosupport.KernelErrorId
	(*DeveloperErrorId)(nil),            // 1: pb.protosupport.DeveloperErrorId
	(*ServiceId)(nil),                   // 2: pb.protosupport.ServiceId
	(*DeveloperId)(nil),                 // 3: pb.protosupport.DeveloperId
	(*MethodId)(nil),                    // 4: pb.protosupport.MethodId
	(*CallId)(nil),                      // 5: pb.protosupport.CallId
	(*PCtx)(nil),                        // 6: pb.protosupport.PCtx
	(*PCtxEvent)(nil),                   // 7: pb.protosupport.PCtxEvent
	(*PCtxMessage)(nil),                 // 8: pb.protosupport.PCtxMessage
	nil,                                 // 9: pb.protosupport.PCtx.EntryEntry
	(*timestamppb.Timestamp)(nil),       // 10: google.protobuf.Timestamp
	(log.LogLevel)(0),                   // 11: pb.log.LogLevel
	(*descriptorpb.ServiceOptions)(nil), // 12: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),  // 13: google.protobuf.MethodOptions
	(*descriptorpb.FieldOptions)(nil),   // 14: google.protobuf.FieldOptions
	(*descriptorpb.FileOptions)(nil),    // 15: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil), // 16: google.protobuf.MessageOptions
}
var file_pb_protosupport_protosupport_proto_depIdxs = []int32{
	8,  // 0: pb.protosupport.PCtx.event:type_name -> pb.protosupport.PCtxMessage
	9,  // 1: pb.protosupport.PCtx.entry:type_name -> pb.protosupport.PCtx.EntryEntry
	8,  // 2: pb.protosupport.PCtx.open:type_name -> pb.protosupport.PCtxMessage
	8,  // 3: pb.protosupport.PCtxEvent.line:type_name -> pb.protosupport.PCtxMessage
	8,  // 4: pb.protosupport.PCtxEvent.parent:type_name -> pb.protosupport.PCtxMessage
	10, // 5: pb.protosupport.PCtxMessage.stamp:type_name -> google.protobuf.Timestamp
	11, // 6: pb.protosupport.PCtxMessage.level:type_name -> pb.log.LogLevel
	7,  // 7: pb.protosupport.PCtxMessage.event:type_name -> pb.protosupport.PCtxEvent
	12, // 8: pb.protosupport.no_package:extendee -> google.protobuf.ServiceOptions
	12, // 9: pb.protosupport.kernel_service:extendee -> google.protobuf.ServiceOptions
	12, // 10: pb.protosupport.wasm_service_name:extendee -> google.protobuf.ServiceOptions
	13, // 11: pb.protosupport.wasm_method_name:extendee -> google.protobuf.MethodOptions
	13, // 12: pb.protosupport.abi_call:extendee -> google.protobuf.MethodOptions
	14, // 13: pb.protosupport.wasm_field_name:extendee -> google.protobuf.FieldOptions
	15, // 14: pb.protosupport.abi:extendee -> google.protobuf.FileOptions
	16, // 15: pb.protosupport.wasm_message_name:extendee -> google.protobuf.MessageOptions
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	8,  // [8:16] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_pb_protosupport_protosupport_proto_init() }
func file_pb_protosupport_protosupport_proto_init() {
	if File_pb_protosupport_protosupport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_protosupport_protosupport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelErrorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_protosupport_protosupport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeveloperErrorId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_protosupport_protosupport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_protosupport_protosupport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeveloperId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_protosupport_protosupport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_protosupport_protosupport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_protosupport_protosupport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCtx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_protosupport_protosupport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCtxEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_protosupport_protosupport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCtxMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_protosupport_protosupport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 8,
			NumServices:   0,
		},
		GoTypes:           file_pb_protosupport_protosupport_proto_goTypes,
		DependencyIndexes: file_pb_protosupport_protosupport_proto_depIdxs,
		MessageInfos:      file_pb_protosupport_protosupport_proto_msgTypes,
		ExtensionInfos:    file_pb_protosupport_protosupport_proto_extTypes,
	}.Build()
	File_pb_protosupport_protosupport_proto = out.File
	file_pb_protosupport_protosupport_proto_rawDesc = nil
	file_pb_protosupport_protosupport_proto_goTypes = nil
	file_pb_protosupport_protosupport_proto_depIdxs = nil
}
