syntax ="proto3";
package methodcall.foo.v1;
option go_package="github.com/iansmith/parigot/g/methodcall/foo/v1;foo";
import "protosupport/v1/protosupport.proto";

service Foo {
    option (protosupport.v1.error_id_name) = "FooErr";
  rpc AddMultiply(AddMultiplyRequest) returns (AddMultiplyResponse);
  rpc LucasSequence(LucasSequenceRequest) returns (LucasSequenceResponse);
  rpc WritePi(WritePiRequest) returns (WritePiResponse);
}


// definitions for the data structures (messages) for the foo service

// add or multiplication, has both request and response
message AddMultiplyRequest {
    int32 value0 = 1;
    int32 value1 = 2;
    bool is_add = 3;
}

message AddMultiplyResponse {
    int32 result = 1;
}

// no input params
message LucasSequenceRequest{ //request a chunk of the lucas sequence 
}

message LucasSequenceResponse {
    repeated int32 sequence = 1;
}

//no output params
message WritePiRequest { //print pi to terminal with log service
    int32 terms = 1;
}

message WritePiResponse {
}

enum FooErr {
    option (protosupport.v1.parigot_error) = true;
    NoError = 0; // mandatory
    DispatchError = 1; //mandatory
    UnmarshalError = 2; // mandatory
    BadParamWritePi = 3;
}