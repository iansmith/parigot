package main

import (
	"fmt"
	"google.golang.org/protobuf/compiler/protogen"
)

func main() {
	protogen.Options{}.Run(func(gen *protogen.Plugin) error {
		for _, f := range gen.Files {
			if !f.Generate {
				continue
			}
			generateFile(gen, f)
		}
		return nil
	})
}

// generateFile generates a suitable interface for use with parigot
func generateFile(gen *protogen.Plugin, file *protogen.File) *protogen.GeneratedFile {
	filename := file.GeneratedFilenamePrefix + ".p.toml"

	//log.Printf("generated file:%s\n", filename)
	//for _, f := range gen.Files {
	//	log.Printf("filename %s ? %v??\n", filename, f.Generate)
	//}
	g := gen.NewGeneratedFile(filename, file.GoImportPath)

	g.P(fmt.Sprintf("## Code generated by protoc-gen-parigot DO NOT EDIT."))
	g.P()
	for _, s := range file.Services {
		g.P("[parigot." + s.GoName + "]")
		g.P("  name=\"", s.GoName, "\"")
		g.P("  package=", file.GoImportPath)

		g.P()
	}
	g.P()

	return g
}
