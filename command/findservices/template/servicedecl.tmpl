type {{toCamelCase .svc.WasmServiceName}} interface {
    {{range .svc.Method}}
        {{- .Name}}({{- if ne .Input "Empty"}}{{- .Input}}{{end}}) {{- if ne .Output "Empty"}}{{- .Output}}{{end}}
    {{- end}}
}

type {{toCamelCase .svc.WasmServiceName}}Handler struct {
    {{- range .svc.Method}}
    {{ .Name}} func({{- if ne .Input "Empty"}}{{- .Input}}{{end}}) {{- if ne .Output "Empty"}}{{- .Output}}{{end}}
    {{- end}}
}

func Locate{{toCamelCase .svc.WasmServiceName}}() {{.svc.WasmServiceName}} {
    anything:=parigot.Locate("{{.svc.WasmServiceName}}")
    return anything.({{.svc.WasmServiceName}})
}

func Register{{toCamelCase .svc.WasmServiceName}}(h {{.svc.WasmServiceName}}Handler) {
    parigot.Register("{{.svc.WasmServiceName}}",h)
}
