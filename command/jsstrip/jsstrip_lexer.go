// Code generated from command/jsstrip/jsstrip.g4 by ANTLR 4.9. DO NOT EDIT.

package main

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 16, 213,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 3, 2, 3, 2, 3, 2, 3, 2, 5, 2, 46,
	10, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 7, 3, 54, 10, 3, 12, 3, 14,
	3, 57, 11, 3, 3, 3, 3, 3, 3, 3, 5, 3, 62, 10, 3, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 5, 7, 73, 10, 7, 3, 7, 6, 7, 76, 10, 7, 13,
	7, 14, 7, 77, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 7, 10, 86, 10, 10,
	12, 10, 14, 10, 89, 11, 10, 3, 11, 5, 11, 92, 10, 11, 3, 11, 6, 11, 95,
	10, 11, 13, 11, 14, 11, 96, 3, 11, 3, 11, 6, 11, 101, 10, 11, 13, 11, 14,
	11, 102, 3, 11, 3, 11, 3, 11, 6, 11, 108, 10, 11, 13, 11, 14, 11, 109,
	5, 11, 112, 10, 11, 5, 11, 114, 10, 11, 3, 12, 5, 12, 117, 10, 12, 3, 12,
	3, 12, 5, 12, 121, 10, 12, 3, 12, 6, 12, 124, 10, 12, 13, 12, 14, 12, 125,
	3, 12, 3, 12, 6, 12, 130, 10, 12, 13, 12, 14, 12, 131, 3, 12, 3, 12, 3,
	12, 3, 12, 3, 13, 5, 13, 139, 10, 13, 3, 13, 3, 13, 3, 13, 3, 13, 6, 13,
	145, 10, 13, 13, 13, 14, 13, 146, 3, 13, 3, 13, 3, 13, 3, 13, 6, 13, 153,
	10, 13, 13, 13, 14, 13, 154, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 14, 6, 14, 166, 10, 14, 13, 14, 14, 14, 167, 3, 15, 3,
	15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 6, 15, 178, 10, 15, 13, 15,
	14, 15, 179, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 6,
	17, 190, 10, 17, 13, 17, 14, 17, 191, 3, 17, 3, 17, 3, 18, 3, 18, 5, 18,
	198, 10, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 7, 20, 207,
	10, 20, 12, 20, 14, 20, 210, 11, 20, 3, 20, 3, 20, 2, 2, 21, 3, 3, 5, 4,
	7, 5, 9, 6, 11, 7, 13, 8, 15, 2, 17, 2, 19, 9, 21, 2, 23, 2, 25, 10, 27,
	11, 29, 12, 31, 13, 33, 14, 35, 15, 37, 2, 39, 16, 3, 2, 8, 4, 2, 12, 12,
	15, 15, 9, 2, 38, 38, 44, 44, 48, 49, 61, 61, 66, 92, 97, 97, 99, 124,
	9, 2, 38, 38, 44, 44, 48, 59, 61, 61, 66, 92, 97, 97, 99, 124, 4, 2, 45,
	45, 47, 47, 4, 2, 50, 59, 99, 104, 3, 2, 36, 36, 2, 233, 2, 3, 3, 2, 2,
	2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2,
	2, 2, 13, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2,
	2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3,
	2, 2, 2, 2, 39, 3, 2, 2, 2, 3, 45, 3, 2, 2, 2, 5, 49, 3, 2, 2, 2, 7, 65,
	3, 2, 2, 2, 9, 67, 3, 2, 2, 2, 11, 69, 3, 2, 2, 2, 13, 72, 3, 2, 2, 2,
	15, 79, 3, 2, 2, 2, 17, 81, 3, 2, 2, 2, 19, 83, 3, 2, 2, 2, 21, 91, 3,
	2, 2, 2, 23, 116, 3, 2, 2, 2, 25, 138, 3, 2, 2, 2, 27, 156, 3, 2, 2, 2,
	29, 169, 3, 2, 2, 2, 31, 181, 3, 2, 2, 2, 33, 186, 3, 2, 2, 2, 35, 197,
	3, 2, 2, 2, 37, 199, 3, 2, 2, 2, 39, 203, 3, 2, 2, 2, 41, 46, 7, 34, 2,
	2, 42, 43, 7, 15, 2, 2, 43, 46, 7, 12, 2, 2, 44, 46, 4, 11, 12, 2, 45,
	41, 3, 2, 2, 2, 45, 42, 3, 2, 2, 2, 45, 44, 3, 2, 2, 2, 46, 47, 3, 2, 2,
	2, 47, 48, 8, 2, 2, 2, 48, 4, 3, 2, 2, 2, 49, 50, 7, 61, 2, 2, 50, 51,
	7, 61, 2, 2, 51, 55, 3, 2, 2, 2, 52, 54, 10, 2, 2, 2, 53, 52, 3, 2, 2,
	2, 54, 57, 3, 2, 2, 2, 55, 53, 3, 2, 2, 2, 55, 56, 3, 2, 2, 2, 56, 61,
	3, 2, 2, 2, 57, 55, 3, 2, 2, 2, 58, 59, 7, 15, 2, 2, 59, 62, 7, 12, 2,
	2, 60, 62, 7, 12, 2, 2, 61, 58, 3, 2, 2, 2, 61, 60, 3, 2, 2, 2, 62, 63,
	3, 2, 2, 2, 63, 64, 8, 3, 2, 2, 64, 6, 3, 2, 2, 2, 65, 66, 7, 42, 2, 2,
	66, 8, 3, 2, 2, 2, 67, 68, 7, 43, 2, 2, 68, 10, 3, 2, 2, 2, 69, 70, 7,
	36, 2, 2, 70, 12, 3, 2, 2, 2, 71, 73, 7, 47, 2, 2, 72, 71, 3, 2, 2, 2,
	72, 73, 3, 2, 2, 2, 73, 75, 3, 2, 2, 2, 74, 76, 4, 50, 59, 2, 75, 74, 3,
	2, 2, 2, 76, 77, 3, 2, 2, 2, 77, 75, 3, 2, 2, 2, 77, 78, 3, 2, 2, 2, 78,
	14, 3, 2, 2, 2, 79, 80, 9, 3, 2, 2, 80, 16, 3, 2, 2, 2, 81, 82, 9, 4, 2,
	2, 82, 18, 3, 2, 2, 2, 83, 87, 5, 15, 8, 2, 84, 86, 5, 17, 9, 2, 85, 84,
	3, 2, 2, 2, 86, 89, 3, 2, 2, 2, 87, 85, 3, 2, 2, 2, 87, 88, 3, 2, 2, 2,
	88, 20, 3, 2, 2, 2, 89, 87, 3, 2, 2, 2, 90, 92, 7, 47, 2, 2, 91, 90, 3,
	2, 2, 2, 91, 92, 3, 2, 2, 2, 92, 94, 3, 2, 2, 2, 93, 95, 4, 50, 59, 2,
	94, 93, 3, 2, 2, 2, 95, 96, 3, 2, 2, 2, 96, 94, 3, 2, 2, 2, 96, 97, 3,
	2, 2, 2, 97, 113, 3, 2, 2, 2, 98, 100, 7, 48, 2, 2, 99, 101, 4, 50, 59,
	2, 100, 99, 3, 2, 2, 2, 101, 102, 3, 2, 2, 2, 102, 100, 3, 2, 2, 2, 102,
	103, 3, 2, 2, 2, 103, 111, 3, 2, 2, 2, 104, 105, 7, 103, 2, 2, 105, 107,
	9, 5, 2, 2, 106, 108, 4, 50, 59, 2, 107, 106, 3, 2, 2, 2, 108, 109, 3,
	2, 2, 2, 109, 107, 3, 2, 2, 2, 109, 110, 3, 2, 2, 2, 110, 112, 3, 2, 2,
	2, 111, 104, 3, 2, 2, 2, 111, 112, 3, 2, 2, 2, 112, 114, 3, 2, 2, 2, 113,
	98, 3, 2, 2, 2, 113, 114, 3, 2, 2, 2, 114, 22, 3, 2, 2, 2, 115, 117, 7,
	47, 2, 2, 116, 115, 3, 2, 2, 2, 116, 117, 3, 2, 2, 2, 117, 120, 3, 2, 2,
	2, 118, 119, 7, 50, 2, 2, 119, 121, 7, 122, 2, 2, 120, 118, 3, 2, 2, 2,
	120, 121, 3, 2, 2, 2, 121, 123, 3, 2, 2, 2, 122, 124, 9, 6, 2, 2, 123,
	122, 3, 2, 2, 2, 124, 125, 3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 125, 126,
	3, 2, 2, 2, 126, 127, 3, 2, 2, 2, 127, 129, 7, 48, 2, 2, 128, 130, 9, 6,
	2, 2, 129, 128, 3, 2, 2, 2, 130, 131, 3, 2, 2, 2, 131, 129, 3, 2, 2, 2,
	131, 132, 3, 2, 2, 2, 132, 133, 3, 2, 2, 2, 133, 134, 7, 114, 2, 2, 134,
	135, 9, 5, 2, 2, 135, 136, 4, 50, 59, 2, 136, 24, 3, 2, 2, 2, 137, 139,
	7, 47, 2, 2, 138, 137, 3, 2, 2, 2, 138, 139, 3, 2, 2, 2, 139, 140, 3, 2,
	2, 2, 140, 141, 7, 50, 2, 2, 141, 142, 7, 122, 2, 2, 142, 144, 3, 2, 2,
	2, 143, 145, 4, 50, 59, 2, 144, 143, 3, 2, 2, 2, 145, 146, 3, 2, 2, 2,
	146, 144, 3, 2, 2, 2, 146, 147, 3, 2, 2, 2, 147, 148, 3, 2, 2, 2, 148,
	149, 7, 114, 2, 2, 149, 150, 7, 45, 2, 2, 150, 152, 3, 2, 2, 2, 151, 153,
	4, 50, 59, 2, 152, 151, 3, 2, 2, 2, 153, 154, 3, 2, 2, 2, 154, 152, 3,
	2, 2, 2, 154, 155, 3, 2, 2, 2, 155, 26, 3, 2, 2, 2, 156, 157, 7, 113, 2,
	2, 157, 158, 7, 104, 2, 2, 158, 159, 7, 104, 2, 2, 159, 160, 7, 117, 2,
	2, 160, 161, 7, 103, 2, 2, 161, 162, 7, 118, 2, 2, 162, 163, 7, 63, 2,
	2, 163, 165, 3, 2, 2, 2, 164, 166, 4, 50, 59, 2, 165, 164, 3, 2, 2, 2,
	166, 167, 3, 2, 2, 2, 167, 165, 3, 2, 2, 2, 167, 168, 3, 2, 2, 2, 168,
	28, 3, 2, 2, 2, 169, 170, 7, 99, 2, 2, 170, 171, 7, 110, 2, 2, 171, 172,
	7, 107, 2, 2, 172, 173, 7, 105, 2, 2, 173, 174, 7, 112, 2, 2, 174, 175,
	7, 63, 2, 2, 175, 177, 3, 2, 2, 2, 176, 178, 4, 50, 59, 2, 177, 176, 3,
	2, 2, 2, 178, 179, 3, 2, 2, 2, 179, 177, 3, 2, 2, 2, 179, 180, 3, 2, 2,
	2, 180, 30, 3, 2, 2, 2, 181, 182, 7, 61, 2, 2, 182, 183, 7, 63, 2, 2, 183,
	184, 5, 21, 11, 2, 184, 185, 7, 61, 2, 2, 185, 32, 3, 2, 2, 2, 186, 187,
	7, 61, 2, 2, 187, 189, 7, 66, 2, 2, 188, 190, 4, 50, 59, 2, 189, 188, 3,
	2, 2, 2, 190, 191, 3, 2, 2, 2, 191, 189, 3, 2, 2, 2, 191, 192, 3, 2, 2,
	2, 192, 193, 3, 2, 2, 2, 193, 194, 7, 61, 2, 2, 194, 34, 3, 2, 2, 2, 195,
	198, 5, 21, 11, 2, 196, 198, 5, 23, 12, 2, 197, 195, 3, 2, 2, 2, 197, 196,
	3, 2, 2, 2, 198, 36, 3, 2, 2, 2, 199, 200, 7, 94, 2, 2, 200, 201, 9, 6,
	2, 2, 201, 202, 9, 6, 2, 2, 202, 38, 3, 2, 2, 2, 203, 208, 7, 36, 2, 2,
	204, 207, 5, 37, 19, 2, 205, 207, 10, 7, 2, 2, 206, 204, 3, 2, 2, 2, 206,
	205, 3, 2, 2, 2, 207, 210, 3, 2, 2, 2, 208, 206, 3, 2, 2, 2, 208, 209,
	3, 2, 2, 2, 209, 211, 3, 2, 2, 2, 210, 208, 3, 2, 2, 2, 211, 212, 7, 36,
	2, 2, 212, 40, 3, 2, 2, 2, 28, 2, 45, 55, 61, 72, 77, 87, 91, 96, 102,
	109, 111, 113, 116, 120, 125, 131, 138, 146, 154, 167, 179, 191, 197, 206,
	208, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "'('", "')'", "'\"'",
}

var lexerSymbolicNames = []string{
	"", "Whitespace", "Comment", "Lparen", "Rparen", "Quote", "Num", "Ident",
	"HexPointer", "Offset", "Align", "ConstAnnotation", "BlockAnnotation",
	"ConstValue", "QuotedString",
}

var lexerRuleNames = []string{
	"Whitespace", "Comment", "Lparen", "Rparen", "Quote", "Num", "IdentFirst",
	"IdentAfter", "Ident", "IntConst", "FloatConst", "HexPointer", "Offset",
	"Align", "ConstAnnotation", "BlockAnnotation", "ConstValue", "HexByteValue",
	"QuotedString",
}

type jsstripLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewjsstripLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *jsstripLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewjsstripLexer(input antlr.CharStream) *jsstripLexer {
	l := new(jsstripLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "jsstrip.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// jsstripLexer tokens.
const (
	jsstripLexerWhitespace      = 1
	jsstripLexerComment         = 2
	jsstripLexerLparen          = 3
	jsstripLexerRparen          = 4
	jsstripLexerQuote           = 5
	jsstripLexerNum             = 6
	jsstripLexerIdent           = 7
	jsstripLexerHexPointer      = 8
	jsstripLexerOffset          = 9
	jsstripLexerAlign           = 10
	jsstripLexerConstAnnotation = 11
	jsstripLexerBlockAnnotation = 12
	jsstripLexerConstValue      = 13
	jsstripLexerQuotedString    = 14
)
