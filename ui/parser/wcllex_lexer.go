// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// at top of file
import "log"

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type wcllex struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var wcllexLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func wcllexLexerInit() {
	staticData := &wcllexLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE", "GrabText",
	}
	staticData.literalNames = []string{
		"", "'@text'", "'@css'", "'@preamble'", "'@doc'", "'@local'", "'@global'",
		"'@extern'", "'@mvc'", "'@pre'", "'@post'", "'@wcl'", "'@event'", "'@model'",
		"'@view'", "'@collection'", "'@controller'", "", "", "", "'<<'", "'->'",
		"", "", "", "", "", "", "", "'<'", "'>'", "", "'#'", "'-'", "'^'", "';'",
		"'+'", "'`'", "", "", "", "", "", "", "", "", "", "", "", "'>>'",
	}
	staticData.symbolicNames = []string{
		"", "Text", "CSS", "Import", "Doc", "Local", "Global", "Extern", "Mvc",
		"Pre", "Post", "Wcl", "Event", "Model", "View", "ViewCollection", "Controller",
		"Id", "TypeStarter", "Version", "DoubleLess", "Arrow", "LCurly", "RCurly",
		"LParen", "RParen", "Dollar", "Comma", "Colon", "LessThan", "GreaterThan",
		"Dot", "Hash", "Dash", "Caret", "Semi", "Plus", "BackTick", "StringLit",
		"DoubleSlashComment", "Whitespace", "GrabDollar", "GrabLCurly", "GrabRCurly",
		"GrabColon", "GrabComma", "GrabDot", "GrabLParen", "GrabRParen", "GrabDoubleGreater",
		"GrabId", "RawText",
	}
	staticData.ruleNames = []string{
		"Text", "CSS", "Import", "Doc", "Local", "Global", "Extern", "Mvc",
		"Pre", "Post", "Wcl", "Event", "Model", "View", "ViewCollection", "Controller",
		"Id", "TypeStarter", "IdentFirst", "IdentAfter", "Version", "Digit",
		"DoubleLess", "Arrow", "LCurly", "RCurly", "LParen", "RParen", "Dollar",
		"Comma", "Colon", "LessThan", "GreaterThan", "Dot", "Hash", "Dash",
		"Caret", "Semi", "Plus", "BackTick", "StringLit", "Esc", "DoubleSlashComment",
		"Whitespace", "GrabDollar", "GrabLCurly", "GrabRCurly", "GrabColon",
		"GrabComma", "GrabDot", "GrabLParen", "GrabRParen", "GrabDoubleGreater",
		"GrabId", "RawText",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 51, 370, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2,
		46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51,
		7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 5,
		16, 229, 8, 16, 10, 16, 12, 16, 232, 9, 16, 1, 17, 1, 17, 1, 18, 1, 18,
		1, 19, 1, 19, 3, 19, 240, 8, 19, 1, 20, 4, 20, 243, 8, 20, 11, 20, 12,
		20, 244, 1, 20, 1, 20, 4, 20, 249, 8, 20, 11, 20, 12, 20, 250, 1, 20, 1,
		20, 4, 20, 255, 8, 20, 11, 20, 12, 20, 256, 1, 21, 1, 21, 1, 22, 1, 22,
		1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1,
		26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31,
		1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1,
		36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 5, 40,
		304, 8, 40, 10, 40, 12, 40, 307, 9, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1,
		41, 1, 41, 3, 41, 315, 8, 41, 1, 42, 1, 42, 1, 42, 1, 42, 4, 42, 321, 8,
		42, 11, 42, 12, 42, 322, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 4, 43, 330,
		8, 43, 11, 43, 12, 43, 331, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1,
		46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51,
		1, 51, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 5, 53, 359, 8,
		53, 10, 53, 12, 53, 362, 9, 53, 1, 54, 4, 54, 365, 8, 54, 11, 54, 12, 54,
		366, 1, 54, 1, 54, 1, 322, 0, 55, 2, 1, 4, 2, 6, 3, 8, 4, 10, 5, 12, 6,
		14, 7, 16, 8, 18, 9, 20, 10, 22, 11, 24, 12, 26, 13, 28, 14, 30, 15, 32,
		16, 34, 17, 36, 18, 38, 0, 40, 0, 42, 19, 44, 0, 46, 20, 48, 21, 50, 22,
		52, 23, 54, 24, 56, 25, 58, 26, 60, 27, 62, 28, 64, 29, 66, 30, 68, 31,
		70, 32, 72, 33, 74, 34, 76, 35, 78, 36, 80, 37, 82, 38, 84, 0, 86, 39,
		88, 40, 90, 41, 92, 42, 94, 43, 96, 44, 98, 45, 100, 46, 102, 47, 104,
		48, 106, 49, 108, 50, 110, 51, 2, 0, 1, 7, 3, 0, 42, 42, 91, 91, 93, 93,
		4, 0, 45, 46, 65, 90, 95, 95, 97, 122, 3, 0, 65, 90, 95, 95, 97, 122, 2,
		0, 34, 34, 92, 92, 2, 0, 10, 10, 13, 13, 3, 0, 0, 0, 9, 13, 32, 32, 5,
		0, 36, 36, 40, 41, 62, 62, 123, 123, 125, 125, 376, 0, 2, 1, 0, 0, 0, 0,
		4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0, 0, 0, 0, 10, 1, 0, 0, 0, 0,
		12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16, 1, 0, 0, 0, 0, 18, 1, 0, 0, 0,
		0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 26, 1, 0, 0,
		0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0, 32, 1, 0, 0, 0, 0, 34, 1, 0,
		0, 0, 0, 36, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 46, 1, 0, 0, 0, 0, 48, 1,
		0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54, 1, 0, 0, 0, 0, 56,
		1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0, 62, 1, 0, 0, 0, 0,
		64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 70, 1, 0, 0, 0,
		0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1, 0, 0, 0, 0, 78, 1, 0, 0,
		0, 0, 80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 86, 1, 0, 0, 0, 0, 88, 1, 0,
		0, 0, 1, 90, 1, 0, 0, 0, 1, 92, 1, 0, 0, 0, 1, 94, 1, 0, 0, 0, 1, 96, 1,
		0, 0, 0, 1, 98, 1, 0, 0, 0, 1, 100, 1, 0, 0, 0, 1, 102, 1, 0, 0, 0, 1,
		104, 1, 0, 0, 0, 1, 106, 1, 0, 0, 0, 1, 108, 1, 0, 0, 0, 1, 110, 1, 0,
		0, 0, 2, 112, 1, 0, 0, 0, 4, 118, 1, 0, 0, 0, 6, 123, 1, 0, 0, 0, 8, 133,
		1, 0, 0, 0, 10, 138, 1, 0, 0, 0, 12, 145, 1, 0, 0, 0, 14, 153, 1, 0, 0,
		0, 16, 161, 1, 0, 0, 0, 18, 166, 1, 0, 0, 0, 20, 171, 1, 0, 0, 0, 22, 177,
		1, 0, 0, 0, 24, 182, 1, 0, 0, 0, 26, 189, 1, 0, 0, 0, 28, 196, 1, 0, 0,
		0, 30, 202, 1, 0, 0, 0, 32, 214, 1, 0, 0, 0, 34, 226, 1, 0, 0, 0, 36, 233,
		1, 0, 0, 0, 38, 235, 1, 0, 0, 0, 40, 239, 1, 0, 0, 0, 42, 242, 1, 0, 0,
		0, 44, 258, 1, 0, 0, 0, 46, 260, 1, 0, 0, 0, 48, 265, 1, 0, 0, 0, 50, 268,
		1, 0, 0, 0, 52, 270, 1, 0, 0, 0, 54, 272, 1, 0, 0, 0, 56, 274, 1, 0, 0,
		0, 58, 276, 1, 0, 0, 0, 60, 278, 1, 0, 0, 0, 62, 280, 1, 0, 0, 0, 64, 282,
		1, 0, 0, 0, 66, 284, 1, 0, 0, 0, 68, 286, 1, 0, 0, 0, 70, 288, 1, 0, 0,
		0, 72, 290, 1, 0, 0, 0, 74, 292, 1, 0, 0, 0, 76, 294, 1, 0, 0, 0, 78, 296,
		1, 0, 0, 0, 80, 298, 1, 0, 0, 0, 82, 300, 1, 0, 0, 0, 84, 314, 1, 0, 0,
		0, 86, 316, 1, 0, 0, 0, 88, 329, 1, 0, 0, 0, 90, 335, 1, 0, 0, 0, 92, 337,
		1, 0, 0, 0, 94, 339, 1, 0, 0, 0, 96, 341, 1, 0, 0, 0, 98, 343, 1, 0, 0,
		0, 100, 345, 1, 0, 0, 0, 102, 347, 1, 0, 0, 0, 104, 349, 1, 0, 0, 0, 106,
		351, 1, 0, 0, 0, 108, 356, 1, 0, 0, 0, 110, 364, 1, 0, 0, 0, 112, 113,
		5, 64, 0, 0, 113, 114, 5, 116, 0, 0, 114, 115, 5, 101, 0, 0, 115, 116,
		5, 120, 0, 0, 116, 117, 5, 116, 0, 0, 117, 3, 1, 0, 0, 0, 118, 119, 5,
		64, 0, 0, 119, 120, 5, 99, 0, 0, 120, 121, 5, 115, 0, 0, 121, 122, 5, 115,
		0, 0, 122, 5, 1, 0, 0, 0, 123, 124, 5, 64, 0, 0, 124, 125, 5, 112, 0, 0,
		125, 126, 5, 114, 0, 0, 126, 127, 5, 101, 0, 0, 127, 128, 5, 97, 0, 0,
		128, 129, 5, 109, 0, 0, 129, 130, 5, 98, 0, 0, 130, 131, 5, 108, 0, 0,
		131, 132, 5, 101, 0, 0, 132, 7, 1, 0, 0, 0, 133, 134, 5, 64, 0, 0, 134,
		135, 5, 100, 0, 0, 135, 136, 5, 111, 0, 0, 136, 137, 5, 99, 0, 0, 137,
		9, 1, 0, 0, 0, 138, 139, 5, 64, 0, 0, 139, 140, 5, 108, 0, 0, 140, 141,
		5, 111, 0, 0, 141, 142, 5, 99, 0, 0, 142, 143, 5, 97, 0, 0, 143, 144, 5,
		108, 0, 0, 144, 11, 1, 0, 0, 0, 145, 146, 5, 64, 0, 0, 146, 147, 5, 103,
		0, 0, 147, 148, 5, 108, 0, 0, 148, 149, 5, 111, 0, 0, 149, 150, 5, 98,
		0, 0, 150, 151, 5, 97, 0, 0, 151, 152, 5, 108, 0, 0, 152, 13, 1, 0, 0,
		0, 153, 154, 5, 64, 0, 0, 154, 155, 5, 101, 0, 0, 155, 156, 5, 120, 0,
		0, 156, 157, 5, 116, 0, 0, 157, 158, 5, 101, 0, 0, 158, 159, 5, 114, 0,
		0, 159, 160, 5, 110, 0, 0, 160, 15, 1, 0, 0, 0, 161, 162, 5, 64, 0, 0,
		162, 163, 5, 109, 0, 0, 163, 164, 5, 118, 0, 0, 164, 165, 5, 99, 0, 0,
		165, 17, 1, 0, 0, 0, 166, 167, 5, 64, 0, 0, 167, 168, 5, 112, 0, 0, 168,
		169, 5, 114, 0, 0, 169, 170, 5, 101, 0, 0, 170, 19, 1, 0, 0, 0, 171, 172,
		5, 64, 0, 0, 172, 173, 5, 112, 0, 0, 173, 174, 5, 111, 0, 0, 174, 175,
		5, 115, 0, 0, 175, 176, 5, 116, 0, 0, 176, 21, 1, 0, 0, 0, 177, 178, 5,
		64, 0, 0, 178, 179, 5, 119, 0, 0, 179, 180, 5, 99, 0, 0, 180, 181, 5, 108,
		0, 0, 181, 23, 1, 0, 0, 0, 182, 183, 5, 64, 0, 0, 183, 184, 5, 101, 0,
		0, 184, 185, 5, 118, 0, 0, 185, 186, 5, 101, 0, 0, 186, 187, 5, 110, 0,
		0, 187, 188, 5, 116, 0, 0, 188, 25, 1, 0, 0, 0, 189, 190, 5, 64, 0, 0,
		190, 191, 5, 109, 0, 0, 191, 192, 5, 111, 0, 0, 192, 193, 5, 100, 0, 0,
		193, 194, 5, 101, 0, 0, 194, 195, 5, 108, 0, 0, 195, 27, 1, 0, 0, 0, 196,
		197, 5, 64, 0, 0, 197, 198, 5, 118, 0, 0, 198, 199, 5, 105, 0, 0, 199,
		200, 5, 101, 0, 0, 200, 201, 5, 119, 0, 0, 201, 29, 1, 0, 0, 0, 202, 203,
		5, 64, 0, 0, 203, 204, 5, 99, 0, 0, 204, 205, 5, 111, 0, 0, 205, 206, 5,
		108, 0, 0, 206, 207, 5, 108, 0, 0, 207, 208, 5, 101, 0, 0, 208, 209, 5,
		99, 0, 0, 209, 210, 5, 116, 0, 0, 210, 211, 5, 105, 0, 0, 211, 212, 5,
		111, 0, 0, 212, 213, 5, 110, 0, 0, 213, 31, 1, 0, 0, 0, 214, 215, 5, 64,
		0, 0, 215, 216, 5, 99, 0, 0, 216, 217, 5, 111, 0, 0, 217, 218, 5, 110,
		0, 0, 218, 219, 5, 116, 0, 0, 219, 220, 5, 114, 0, 0, 220, 221, 5, 111,
		0, 0, 221, 222, 5, 108, 0, 0, 222, 223, 5, 108, 0, 0, 223, 224, 5, 101,
		0, 0, 224, 225, 5, 114, 0, 0, 225, 33, 1, 0, 0, 0, 226, 230, 3, 38, 18,
		0, 227, 229, 3, 40, 19, 0, 228, 227, 1, 0, 0, 0, 229, 232, 1, 0, 0, 0,
		230, 228, 1, 0, 0, 0, 230, 231, 1, 0, 0, 0, 231, 35, 1, 0, 0, 0, 232, 230,
		1, 0, 0, 0, 233, 234, 7, 0, 0, 0, 234, 37, 1, 0, 0, 0, 235, 236, 7, 1,
		0, 0, 236, 39, 1, 0, 0, 0, 237, 240, 7, 2, 0, 0, 238, 240, 3, 44, 21, 0,
		239, 237, 1, 0, 0, 0, 239, 238, 1, 0, 0, 0, 240, 41, 1, 0, 0, 0, 241, 243,
		3, 44, 21, 0, 242, 241, 1, 0, 0, 0, 243, 244, 1, 0, 0, 0, 244, 242, 1,
		0, 0, 0, 244, 245, 1, 0, 0, 0, 245, 246, 1, 0, 0, 0, 246, 248, 3, 68, 33,
		0, 247, 249, 3, 44, 21, 0, 248, 247, 1, 0, 0, 0, 249, 250, 1, 0, 0, 0,
		250, 248, 1, 0, 0, 0, 250, 251, 1, 0, 0, 0, 251, 252, 1, 0, 0, 0, 252,
		254, 3, 68, 33, 0, 253, 255, 3, 44, 21, 0, 254, 253, 1, 0, 0, 0, 255, 256,
		1, 0, 0, 0, 256, 254, 1, 0, 0, 0, 256, 257, 1, 0, 0, 0, 257, 43, 1, 0,
		0, 0, 258, 259, 2, 48, 57, 0, 259, 45, 1, 0, 0, 0, 260, 261, 5, 60, 0,
		0, 261, 262, 5, 60, 0, 0, 262, 263, 1, 0, 0, 0, 263, 264, 6, 22, 0, 0,
		264, 47, 1, 0, 0, 0, 265, 266, 5, 45, 0, 0, 266, 267, 5, 62, 0, 0, 267,
		49, 1, 0, 0, 0, 268, 269, 5, 123, 0, 0, 269, 51, 1, 0, 0, 0, 270, 271,
		5, 125, 0, 0, 271, 53, 1, 0, 0, 0, 272, 273, 5, 40, 0, 0, 273, 55, 1, 0,
		0, 0, 274, 275, 5, 41, 0, 0, 275, 57, 1, 0, 0, 0, 276, 277, 5, 36, 0, 0,
		277, 59, 1, 0, 0, 0, 278, 279, 5, 44, 0, 0, 279, 61, 1, 0, 0, 0, 280, 281,
		5, 58, 0, 0, 281, 63, 1, 0, 0, 0, 282, 283, 5, 60, 0, 0, 283, 65, 1, 0,
		0, 0, 284, 285, 5, 62, 0, 0, 285, 67, 1, 0, 0, 0, 286, 287, 5, 46, 0, 0,
		287, 69, 1, 0, 0, 0, 288, 289, 5, 35, 0, 0, 289, 71, 1, 0, 0, 0, 290, 291,
		5, 45, 0, 0, 291, 73, 1, 0, 0, 0, 292, 293, 5, 94, 0, 0, 293, 75, 1, 0,
		0, 0, 294, 295, 5, 59, 0, 0, 295, 77, 1, 0, 0, 0, 296, 297, 5, 43, 0, 0,
		297, 79, 1, 0, 0, 0, 298, 299, 5, 96, 0, 0, 299, 81, 1, 0, 0, 0, 300, 305,
		5, 34, 0, 0, 301, 304, 3, 84, 41, 0, 302, 304, 8, 3, 0, 0, 303, 301, 1,
		0, 0, 0, 303, 302, 1, 0, 0, 0, 304, 307, 1, 0, 0, 0, 305, 303, 1, 0, 0,
		0, 305, 306, 1, 0, 0, 0, 306, 308, 1, 0, 0, 0, 307, 305, 1, 0, 0, 0, 308,
		309, 5, 34, 0, 0, 309, 83, 1, 0, 0, 0, 310, 311, 5, 92, 0, 0, 311, 315,
		5, 34, 0, 0, 312, 313, 5, 92, 0, 0, 313, 315, 5, 92, 0, 0, 314, 310, 1,
		0, 0, 0, 314, 312, 1, 0, 0, 0, 315, 85, 1, 0, 0, 0, 316, 317, 5, 47, 0,
		0, 317, 318, 5, 47, 0, 0, 318, 320, 1, 0, 0, 0, 319, 321, 9, 0, 0, 0, 320,
		319, 1, 0, 0, 0, 321, 322, 1, 0, 0, 0, 322, 323, 1, 0, 0, 0, 322, 320,
		1, 0, 0, 0, 323, 324, 1, 0, 0, 0, 324, 325, 7, 4, 0, 0, 325, 326, 1, 0,
		0, 0, 326, 327, 6, 42, 1, 0, 327, 87, 1, 0, 0, 0, 328, 330, 7, 5, 0, 0,
		329, 328, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 329, 1, 0, 0, 0, 331,
		332, 1, 0, 0, 0, 332, 333, 1, 0, 0, 0, 333, 334, 6, 43, 1, 0, 334, 89,
		1, 0, 0, 0, 335, 336, 5, 36, 0, 0, 336, 91, 1, 0, 0, 0, 337, 338, 5, 123,
		0, 0, 338, 93, 1, 0, 0, 0, 339, 340, 5, 125, 0, 0, 340, 95, 1, 0, 0, 0,
		341, 342, 5, 58, 0, 0, 342, 97, 1, 0, 0, 0, 343, 344, 5, 44, 0, 0, 344,
		99, 1, 0, 0, 0, 345, 346, 5, 46, 0, 0, 346, 101, 1, 0, 0, 0, 347, 348,
		5, 40, 0, 0, 348, 103, 1, 0, 0, 0, 349, 350, 5, 41, 0, 0, 350, 105, 1,
		0, 0, 0, 351, 352, 5, 62, 0, 0, 352, 353, 5, 62, 0, 0, 353, 354, 1, 0,
		0, 0, 354, 355, 6, 52, 2, 0, 355, 107, 1, 0, 0, 0, 356, 360, 3, 38, 18,
		0, 357, 359, 3, 40, 19, 0, 358, 357, 1, 0, 0, 0, 359, 362, 1, 0, 0, 0,
		360, 358, 1, 0, 0, 0, 360, 361, 1, 0, 0, 0, 361, 109, 1, 0, 0, 0, 362,
		360, 1, 0, 0, 0, 363, 365, 8, 6, 0, 0, 364, 363, 1, 0, 0, 0, 365, 366,
		1, 0, 0, 0, 366, 364, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0, 367, 368, 1, 0,
		0, 0, 368, 369, 6, 54, 3, 0, 369, 111, 1, 0, 0, 0, 14, 0, 1, 230, 239,
		244, 250, 256, 303, 305, 314, 322, 331, 360, 366, 4, 5, 1, 0, 6, 0, 0,
		4, 0, 0, 1, 54, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// wcllexInit initializes any static state used to implement wcllex. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// Newwcllex(). You can call this function if you wish to initialize the static state ahead
// of time.
func WcllexInit() {
	staticData := &wcllexLexerStaticData
	staticData.once.Do(wcllexLexerInit)
}

// Newwcllex produces a new lexer instance for the optional input antlr.CharStream.
func Newwcllex(input antlr.CharStream) *wcllex {
	WcllexInit()
	l := new(wcllex)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &wcllexLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "wcllex.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// wcllex tokens.
const (
	wcllexText               = 1
	wcllexCSS                = 2
	wcllexImport             = 3
	wcllexDoc                = 4
	wcllexLocal              = 5
	wcllexGlobal             = 6
	wcllexExtern             = 7
	wcllexMvc                = 8
	wcllexPre                = 9
	wcllexPost               = 10
	wcllexWcl                = 11
	wcllexEvent              = 12
	wcllexModel              = 13
	wcllexView               = 14
	wcllexViewCollection     = 15
	wcllexController         = 16
	wcllexId                 = 17
	wcllexTypeStarter        = 18
	wcllexVersion            = 19
	wcllexDoubleLess         = 20
	wcllexArrow              = 21
	wcllexLCurly             = 22
	wcllexRCurly             = 23
	wcllexLParen             = 24
	wcllexRParen             = 25
	wcllexDollar             = 26
	wcllexComma              = 27
	wcllexColon              = 28
	wcllexLessThan           = 29
	wcllexGreaterThan        = 30
	wcllexDot                = 31
	wcllexHash               = 32
	wcllexDash               = 33
	wcllexCaret              = 34
	wcllexSemi               = 35
	wcllexPlus               = 36
	wcllexBackTick           = 37
	wcllexStringLit          = 38
	wcllexDoubleSlashComment = 39
	wcllexWhitespace         = 40
	wcllexGrabDollar         = 41
	wcllexGrabLCurly         = 42
	wcllexGrabRCurly         = 43
	wcllexGrabColon          = 44
	wcllexGrabComma          = 45
	wcllexGrabDot            = 46
	wcllexGrabLParen         = 47
	wcllexGrabRParen         = 48
	wcllexGrabDoubleGreater  = 49
	wcllexGrabId             = 50
	wcllexRawText            = 51
)

// wcllexGrabText is the wcllex mode.
const wcllexGrabText = 1

func (l *wcllex) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 54:
		l.RawText_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *wcllex) RawText_Action(localctx antlr.RuleContext, actionIndex int) {
	this := l
	_ = this

	switch actionIndex {
	case 0:
		log.Printf("xxx got '%s' for raw text", l.GetText())

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
