---
title: "To do"
date: 2022-10-01T04:42:48-04:00
draft: false
---

### WASM
  * Need to figure out if we want to support particular version (2.0?)
  and possibly particular feature sets

### compiler (protoc-gen-parigot)
* make locator template something that can be selected from the command line
* walk through the code paths and get return values to always be parigot.Error
* flow the errors through the compiler generated code so we can report them back to the protoc level
* enums, especially for the errors coming back from dispatch -- and that should be
coordinated with client side service
    * requires new templates
* rip out all of the "Get<Blah>" methods in our code and make them more goish.
    * GetBlah() is ok in protoc generated code
* walk through the basic usages of protoc-gen-parigot and make it not produce any files that are not used
* Fix compiler generating servicedecl and server twice

### logging
* service calls with parameters, log messages

### docs
* generate .md files from the .proto files
    * https://github.com/pseudomuto/protoc-gen-doc
* use godoc to generate detailed doc  
    * https://github.com/robertkrimen/godocdown

### transform
* rip out all of the "Get<Blah>" methods and make them more goish.

### surgery (postponed)
* change the way we implement replacement functions to be a replacement import
    * add the "normal" replacement, if that works correctly

## file service
* Make it work right with the new splitutil stuff

## deploy validations
* Deployment file should be able to check that the world is in a sane state
    * Check DB exists, Check queue exists, etc

### processes
* process states like started, waiting, running needs a check
    * check that the processes 
* Rename run() to runblock() (including in client side)
    * Rename "start" and "run" methods of a process as stage1 and stage2 or similar
    * check Run, RunNotify, and RunBlock usages

### require/export
* Add support for "RequireAllAndExport1()" in main
    * Some type of "SimpleReady()"?
* Switch names to be parigot.log + Log, etc

### nameserver
* get rid of local/remote syscall
    * Fix the hack of the global var LocalNS-- 
    * remove process link to it's own "syscall"
* Make exit request wait for in process call

### kernel 
* Add kernel.Now() plus debugging "freeze time"

### testing
* add a generated section such that PARIGOT_TEST controls whether or not 
    a particular function gets BOUND ... anything starting with Test or test should
    get this check added in the binding code
    

### startup/shutdown
* Bad state of services, make sure errors are ok
    * Test different run BAD configurations to make sure errors are ok
    * Test different BAD exit conditions to make sure errors are ok
    * Be sure to test situation where a required service wasnot in the deploy
    
### uncategorized
* Add appname?



## Web Coord Language
- define css rules of interest
- laconic style html dev
- section of text functions that are connected to html dev
- css can also be attached to html dev
- events attached to html
- functions provided in assemblyscript? typescript? go?

