// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: queue/v1/queue.proto

package queue

import (
	v1 "github.com/iansmith/parigot/g/protosupport/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueErr int32

const (
	QueueErr_NoError        QueueErr = 0 // mandatory
	QueueErr_DispatchError  QueueErr = 1 // mandatory
	QueueErr_UnmarshalError QueueErr = 2 //mandatory
	QueueErr_MarshalError   QueueErr = 3 //mandatory
	// InvalidName means that the given queue name is a not a valid
	// identifier.  Identifiers must contain only ascii alphanumeric characters
	// and the symbols ".", ",","_" and "-".  The first letter of a queue name
	// must be an alphabetic character.
	QueueErr_InvalidName QueueErr = 4
	// InternalError means that the queue's implementation (not the values)
	// passed to it) is the problem.  This is roughly a 500 not a 401.
	// This is usually caused by a problem with the internal
	// database used to store the queue items.
	QueueErr_InternalError QueueErr = 5
	// NoPayload is an error that means that an attempt was made to create
	// a message a nil payload.  Payloads are mandatory and senders are optional.
	QueueErr_NoPayload QueueErr = 6
	// NotFound means that the Queue name requested could not be found.
	// This the queue equivalent of 404.
	QueueErr_NotFound QueueErr = 7
	// AlreadyExists means that the Queue name is already in use.
	QueueErr_AlreadyExists QueueErr = 8
	// Unmarshal error means that we could not use the protobuf
	// unmarshal successfully for a payload or sender.
	QueueErr_UnmarshalFailed QueueErr = 9
)

// Enum value maps for QueueErr.
var (
	QueueErr_name = map[int32]string{
		0: "NoError",
		1: "DispatchError",
		2: "UnmarshalError",
		3: "MarshalError",
		4: "InvalidName",
		5: "InternalError",
		6: "NoPayload",
		7: "NotFound",
		8: "AlreadyExists",
		9: "UnmarshalFailed",
	}
	QueueErr_value = map[string]int32{
		"NoError":         0,
		"DispatchError":   1,
		"UnmarshalError":  2,
		"MarshalError":    3,
		"InvalidName":     4,
		"InternalError":   5,
		"NoPayload":       6,
		"NotFound":        7,
		"AlreadyExists":   8,
		"UnmarshalFailed": 9,
	}
)

func (x QueueErr) Enum() *QueueErr {
	p := new(QueueErr)
	*p = x
	return p
}

func (x QueueErr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueErr) Descriptor() protoreflect.EnumDescriptor {
	return file_queue_v1_queue_proto_enumTypes[0].Descriptor()
}

func (QueueErr) Type() protoreflect.EnumType {
	return &file_queue_v1_queue_proto_enumTypes[0]
}

func (x QueueErr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueErr.Descriptor instead.
func (QueueErr) EnumDescriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{0}
}

// Create creates a queue or returns an error.  Note that this is usually used
// only once to set up the operating environment.
type CreateQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName string `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
}

func (x *CreateQueueRequest) Reset() {
	*x = CreateQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueRequest) ProtoMessage() {}

func (x *CreateQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueRequest.ProtoReflect.Descriptor instead.
func (*CreateQueueRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{0}
}

func (x *CreateQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// CreateQueueResponse returns the queue just created.
// Errors are passed back out of band.
type CreateQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *v1.IdRaw `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateQueueResponse) Reset() {
	*x = CreateQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueResponse) ProtoMessage() {}

func (x *CreateQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueResponse.ProtoReflect.Descriptor instead.
func (*CreateQueueResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{1}
}

func (x *CreateQueueResponse) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

// LocateRequest is request to access a given queue.
type LocateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName string `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
}

func (x *LocateRequest) Reset() {
	*x = LocateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateRequest) ProtoMessage() {}

func (x *LocateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateRequest.ProtoReflect.Descriptor instead.
func (*LocateRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{2}
}

func (x *LocateRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

// LocateResponse returns the queue id corresponding to the name
// provided.  It returns errors out of band.
type LocateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *v1.IdRaw `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LocateResponse) Reset() {
	*x = LocateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateResponse) ProtoMessage() {}

func (x *LocateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateResponse.ProtoReflect.Descriptor instead.
func (*LocateResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{3}
}

func (x *LocateResponse) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

// Delete queue deletes a queue and returns the queue id deleted, or sends
// an error out of band.
type DeleteQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *v1.IdRaw `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteQueueRequest) Reset() {
	*x = DeleteQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueRequest) ProtoMessage() {}

func (x *DeleteQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueRequest.ProtoReflect.Descriptor instead.
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteQueueRequest) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

// DeleteQueueResponse returns the (now invalid) queue id of what
// was just deleted.
type DeleteQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *v1.IdRaw `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteQueueResponse) Reset() {
	*x = DeleteQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueResponse) ProtoMessage() {}

func (x *DeleteQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueResponse.ProtoReflect.Descriptor instead.
func (*DeleteQueueResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteQueueResponse) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

// Receive pulls the available messages from the queue and returns
// them.  Note that if multiple copies of the caller exist, the
// caller must be prepared to receive the same message multiple
// times.
type ReceiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *v1.IdRaw `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// it is expected that you can process all received messages inside the time limit
	MessageLimit int32 `protobuf:"varint,2,opt,name=message_limit,json=messageLimit,proto3" json:"message_limit,omitempty"` // 1 is usually the right choice here
}

func (x *ReceiveRequest) Reset() {
	*x = ReceiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRequest) ProtoMessage() {}

func (x *ReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRequest.ProtoReflect.Descriptor instead.
func (*ReceiveRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{6}
}

func (x *ReceiveRequest) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ReceiveRequest) GetMessageLimit() int32 {
	if x != nil {
		return x.MessageLimit
	}
	return 0
}

// Receive response hands the caller a list of messages to
// process. If you need to return an error, do so out of band.
type ReceiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *v1.IdRaw   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message []*QueueMsg `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty"`
}

func (x *ReceiveResponse) Reset() {
	*x = ReceiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveResponse) ProtoMessage() {}

func (x *ReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveResponse.ProtoReflect.Descriptor instead.
func (*ReceiveResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiveResponse) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ReceiveResponse) GetMessage() []*QueueMsg {
	if x != nil {
		return x.Message
	}
	return nil
}

// QueueMsg represents an object returned by a call to Receive.
type QueueMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *v1.IdRaw `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MsgId *v1.IdRaw `protobuf:"bytes,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	// ReceiveCount is an approximation of the number of times
	// this messages has been delivered before this delivery.
	ReceiveCount int32 `protobuf:"varint,3,opt,name=receive_count,json=receiveCount,proto3" json:"receive_count,omitempty"`
	// ReceiveTime is an approximation to the first time the message was received.
	// If the message has never been received before, this will be the zero value.
	Received *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=received,proto3" json:"received,omitempty"`
	// sender may be any type (or nil) at the discretion of sender
	Sender *anypb.Any `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	// when the message was sent
	Sent *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=sent,proto3" json:"sent,omitempty"`
	// payload must be a serialized protobuf object
	Payload *anypb.Any `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *QueueMsg) Reset() {
	*x = QueueMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueMsg) ProtoMessage() {}

func (x *QueueMsg) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueMsg.ProtoReflect.Descriptor instead.
func (*QueueMsg) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{8}
}

func (x *QueueMsg) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *QueueMsg) GetMsgId() *v1.IdRaw {
	if x != nil {
		return x.MsgId
	}
	return nil
}

func (x *QueueMsg) GetReceiveCount() int32 {
	if x != nil {
		return x.ReceiveCount
	}
	return 0
}

func (x *QueueMsg) GetReceived() *timestamppb.Timestamp {
	if x != nil {
		return x.Received
	}
	return nil
}

func (x *QueueMsg) GetSender() *anypb.Any {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *QueueMsg) GetSent() *timestamppb.Timestamp {
	if x != nil {
		return x.Sent
	}
	return nil
}

func (x *QueueMsg) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

// MarkDone request indicates that the caller has finished processing
// each message in
type MarkDoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  *v1.IdRaw   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Msg []*v1.IdRaw `protobuf:"bytes,2,rep,name=msg,proto3" json:"msg,omitempty"`
}

func (x *MarkDoneRequest) Reset() {
	*x = MarkDoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkDoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkDoneRequest) ProtoMessage() {}

func (x *MarkDoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkDoneRequest.ProtoReflect.Descriptor instead.
func (*MarkDoneRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{9}
}

func (x *MarkDoneRequest) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MarkDoneRequest) GetMsg() []*v1.IdRaw {
	if x != nil {
		return x.Msg
	}
	return nil
}

// MarkDone returns the list of unmodified (not marked done) messages
// remaining. In the normal case, this will be empty.  If there was an error
// trying to mark items as done, it returns the error and
// puts the unmarked elements in the list unmodified
type MarkDoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *v1.IdRaw   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Unmodified []*v1.IdRaw `protobuf:"bytes,2,rep,name=unmodified,proto3" json:"unmodified,omitempty"`
}

func (x *MarkDoneResponse) Reset() {
	*x = MarkDoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkDoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkDoneResponse) ProtoMessage() {}

func (x *MarkDoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkDoneResponse.ProtoReflect.Descriptor instead.
func (*MarkDoneResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{10}
}

func (x *MarkDoneResponse) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MarkDoneResponse) GetUnmodified() []*v1.IdRaw {
	if x != nil {
		return x.Unmodified
	}
	return nil
}

// Length requests and approximation of the number of elements in the queue
type LengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *v1.IdRaw `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LengthRequest) Reset() {
	*x = LengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LengthRequest) ProtoMessage() {}

func (x *LengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LengthRequest.ProtoReflect.Descriptor instead.
func (*LengthRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{11}
}

func (x *LengthRequest) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

// LengthResponse returns the queue id identifying the queue we
// computed the length for.
type LengthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *v1.IdRaw `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Length int64     `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *LengthResponse) Reset() {
	*x = LengthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LengthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LengthResponse) ProtoMessage() {}

func (x *LengthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LengthResponse.ProtoReflect.Descriptor instead.
func (*LengthResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{12}
}

func (x *LengthResponse) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *LengthResponse) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

// Send requests enqueues the queue messages provided.
type SendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  *v1.IdRaw   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Msg []*QueueMsg `protobuf:"bytes,2,rep,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{13}
}

func (x *SendRequest) GetId() *v1.IdRaw {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SendRequest) GetMsg() []*QueueMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

// If the queue msg id is an error then we are using the error_detail_msg to
// return the value.  Note that the message id you provide here will
// changed once we send you the success notification using your id.
type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeed  []*v1.IdRaw `protobuf:"bytes,1,rep,name=succeed,proto3" json:"succeed,omitempty"`
	Fail     []*QueueMsg `protobuf:"bytes,2,rep,name=fail,proto3" json:"fail,omitempty"`
	FailedOn *v1.IdRaw   `protobuf:"bytes,3,opt,name=failed_on,json=failedOn,proto3" json:"failed_on,omitempty"`
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_v1_queue_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{14}
}

func (x *SendResponse) GetSucceed() []*v1.IdRaw {
	if x != nil {
		return x.Succeed
	}
	return nil
}

func (x *SendResponse) GetFail() []*QueueMsg {
	if x != nil {
		return x.Fail
	}
	return nil
}

func (x *SendResponse) GetFailedOn() *v1.IdRaw {
	if x != nil {
		return x.FailedOn
	}
	return nil
}

var File_queue_v1_queue_proto protoreflect.FileDescriptor

var file_queue_v1_queue_proto_rawDesc = []byte{
	0x0a, 0x14, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x33, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3c,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x0e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61,
	0x77, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x67, 0x0a, 0x0f, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61,
	0x77, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xcc, 0x02, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x73, 0x67,
	0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x64, 0x52, 0x61, 0x77, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77,
	0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x73, 0x65,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x61, 0x77, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x72, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x44,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x75, 0x6e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52,
	0x0a, 0x75, 0x6e, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x37, 0x0a, 0x0d, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x0e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x5b, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x9d, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x12, 0x33,
	0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x4f, 0x6e, 0x2a, 0xc0, 0x01, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x72, 0x72,
	0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x6e,
	0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x09, 0x1a,
	0x05, 0xd8, 0x9e, 0x89, 0x02, 0x01, 0x32, 0xd3, 0x03, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x1c, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1c, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x12, 0x18, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e,
	0x65, 0x12, 0x19, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x44, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x6f, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x17, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x15, 0x2e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e, 0x5a, 0x2c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x61, 0x6e, 0x73, 0x6d,
	0x69, 0x74, 0x68, 0x2f, 0x70, 0x61, 0x72, 0x69, 0x67, 0x6f, 0x74, 0x2f, 0x67, 0x2f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_queue_v1_queue_proto_rawDescOnce sync.Once
	file_queue_v1_queue_proto_rawDescData = file_queue_v1_queue_proto_rawDesc
)

func file_queue_v1_queue_proto_rawDescGZIP() []byte {
	file_queue_v1_queue_proto_rawDescOnce.Do(func() {
		file_queue_v1_queue_proto_rawDescData = protoimpl.X.CompressGZIP(file_queue_v1_queue_proto_rawDescData)
	})
	return file_queue_v1_queue_proto_rawDescData
}

var file_queue_v1_queue_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_queue_v1_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_queue_v1_queue_proto_goTypes = []interface{}{
	(QueueErr)(0),                 // 0: queue.v1.QueueErr
	(*CreateQueueRequest)(nil),    // 1: queue.v1.CreateQueueRequest
	(*CreateQueueResponse)(nil),   // 2: queue.v1.CreateQueueResponse
	(*LocateRequest)(nil),         // 3: queue.v1.LocateRequest
	(*LocateResponse)(nil),        // 4: queue.v1.LocateResponse
	(*DeleteQueueRequest)(nil),    // 5: queue.v1.DeleteQueueRequest
	(*DeleteQueueResponse)(nil),   // 6: queue.v1.DeleteQueueResponse
	(*ReceiveRequest)(nil),        // 7: queue.v1.ReceiveRequest
	(*ReceiveResponse)(nil),       // 8: queue.v1.ReceiveResponse
	(*QueueMsg)(nil),              // 9: queue.v1.QueueMsg
	(*MarkDoneRequest)(nil),       // 10: queue.v1.MarkDoneRequest
	(*MarkDoneResponse)(nil),      // 11: queue.v1.MarkDoneResponse
	(*LengthRequest)(nil),         // 12: queue.v1.LengthRequest
	(*LengthResponse)(nil),        // 13: queue.v1.LengthResponse
	(*SendRequest)(nil),           // 14: queue.v1.SendRequest
	(*SendResponse)(nil),          // 15: queue.v1.SendResponse
	(*v1.IdRaw)(nil),              // 16: protosupport.v1.IdRaw
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 18: google.protobuf.Any
}
var file_queue_v1_queue_proto_depIdxs = []int32{
	16, // 0: queue.v1.CreateQueueResponse.id:type_name -> protosupport.v1.IdRaw
	16, // 1: queue.v1.LocateResponse.id:type_name -> protosupport.v1.IdRaw
	16, // 2: queue.v1.DeleteQueueRequest.id:type_name -> protosupport.v1.IdRaw
	16, // 3: queue.v1.DeleteQueueResponse.id:type_name -> protosupport.v1.IdRaw
	16, // 4: queue.v1.ReceiveRequest.id:type_name -> protosupport.v1.IdRaw
	16, // 5: queue.v1.ReceiveResponse.id:type_name -> protosupport.v1.IdRaw
	9,  // 6: queue.v1.ReceiveResponse.message:type_name -> queue.v1.QueueMsg
	16, // 7: queue.v1.QueueMsg.id:type_name -> protosupport.v1.IdRaw
	16, // 8: queue.v1.QueueMsg.msg_id:type_name -> protosupport.v1.IdRaw
	17, // 9: queue.v1.QueueMsg.received:type_name -> google.protobuf.Timestamp
	18, // 10: queue.v1.QueueMsg.sender:type_name -> google.protobuf.Any
	17, // 11: queue.v1.QueueMsg.sent:type_name -> google.protobuf.Timestamp
	18, // 12: queue.v1.QueueMsg.payload:type_name -> google.protobuf.Any
	16, // 13: queue.v1.MarkDoneRequest.id:type_name -> protosupport.v1.IdRaw
	16, // 14: queue.v1.MarkDoneRequest.msg:type_name -> protosupport.v1.IdRaw
	16, // 15: queue.v1.MarkDoneResponse.id:type_name -> protosupport.v1.IdRaw
	16, // 16: queue.v1.MarkDoneResponse.unmodified:type_name -> protosupport.v1.IdRaw
	16, // 17: queue.v1.LengthRequest.id:type_name -> protosupport.v1.IdRaw
	16, // 18: queue.v1.LengthResponse.id:type_name -> protosupport.v1.IdRaw
	16, // 19: queue.v1.SendRequest.id:type_name -> protosupport.v1.IdRaw
	9,  // 20: queue.v1.SendRequest.msg:type_name -> queue.v1.QueueMsg
	16, // 21: queue.v1.SendResponse.succeed:type_name -> protosupport.v1.IdRaw
	9,  // 22: queue.v1.SendResponse.fail:type_name -> queue.v1.QueueMsg
	16, // 23: queue.v1.SendResponse.failed_on:type_name -> protosupport.v1.IdRaw
	1,  // 24: queue.v1.Queue.CreateQueue:input_type -> queue.v1.CreateQueueRequest
	3,  // 25: queue.v1.Queue.Locate:input_type -> queue.v1.LocateRequest
	5,  // 26: queue.v1.Queue.DeleteQueue:input_type -> queue.v1.DeleteQueueRequest
	7,  // 27: queue.v1.Queue.Receive:input_type -> queue.v1.ReceiveRequest
	10, // 28: queue.v1.Queue.MarkDone:input_type -> queue.v1.MarkDoneRequest
	12, // 29: queue.v1.Queue.Length:input_type -> queue.v1.LengthRequest
	14, // 30: queue.v1.Queue.Send:input_type -> queue.v1.SendRequest
	2,  // 31: queue.v1.Queue.CreateQueue:output_type -> queue.v1.CreateQueueResponse
	4,  // 32: queue.v1.Queue.Locate:output_type -> queue.v1.LocateResponse
	6,  // 33: queue.v1.Queue.DeleteQueue:output_type -> queue.v1.DeleteQueueResponse
	8,  // 34: queue.v1.Queue.Receive:output_type -> queue.v1.ReceiveResponse
	11, // 35: queue.v1.Queue.MarkDone:output_type -> queue.v1.MarkDoneResponse
	13, // 36: queue.v1.Queue.Length:output_type -> queue.v1.LengthResponse
	15, // 37: queue.v1.Queue.Send:output_type -> queue.v1.SendResponse
	31, // [31:38] is the sub-list for method output_type
	24, // [24:31] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_queue_v1_queue_proto_init() }
func file_queue_v1_queue_proto_init() {
	if File_queue_v1_queue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_queue_v1_queue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkDoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkDoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LengthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_v1_queue_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_queue_v1_queue_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_queue_v1_queue_proto_goTypes,
		DependencyIndexes: file_queue_v1_queue_proto_depIdxs,
		EnumInfos:         file_queue_v1_queue_proto_enumTypes,
		MessageInfos:      file_queue_v1_queue_proto_msgTypes,
	}.Build()
	File_queue_v1_queue_proto = out.File
	file_queue_v1_queue_proto_rawDesc = nil
	file_queue_v1_queue_proto_goTypes = nil
	file_queue_v1_queue_proto_depIdxs = nil
}
