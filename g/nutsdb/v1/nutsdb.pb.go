// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: nutsdb/v1/nutsdb.proto

package nutsdb

import (
	v1 "github.com/iansmith/parigot/g/protosupport/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NutsDBErr int32

const (
	NutsDBErr_NoError        NutsDBErr = 0 // mandatory
	NutsDBErr_DispatchError  NutsDBErr = 1 //mandatory
	NutsDBErr_UnmarshalError NutsDBErr = 2 // mandatory
	NutsDBErr_MarshalError   NutsDBErr = 3 // mandatory
	NutsDBErr_BadBucketPath  NutsDBErr = 4
	NutsDBErr_PairNotFound   NutsDBErr = 5
	NutsDBErr_BadDBName      NutsDBErr = 6
	NutsDBErr_DBNotFound     NutsDBErr = 7
	NutsDBErr_InternalError  NutsDBErr = 8
	NutsDBErr_BadId          NutsDBErr = 9
	NutsDBErr_BucketNotFound NutsDBErr = 10
	NutsDBErr_DBIsClosed     NutsDBErr = 11
	NutsDBErr_Expired        NutsDBErr = 12
	NutsDBErr_KeyEmpty       NutsDBErr = 13
)

// Enum value maps for NutsDBErr.
var (
	NutsDBErr_name = map[int32]string{
		0:  "NoError",
		1:  "DispatchError",
		2:  "UnmarshalError",
		3:  "MarshalError",
		4:  "BadBucketPath",
		5:  "PairNotFound",
		6:  "BadDBName",
		7:  "DBNotFound",
		8:  "InternalError",
		9:  "BadId",
		10: "BucketNotFound",
		11: "DBIsClosed",
		12: "Expired",
		13: "KeyEmpty",
	}
	NutsDBErr_value = map[string]int32{
		"NoError":        0,
		"DispatchError":  1,
		"UnmarshalError": 2,
		"MarshalError":   3,
		"BadBucketPath":  4,
		"PairNotFound":   5,
		"BadDBName":      6,
		"DBNotFound":     7,
		"InternalError":  8,
		"BadId":          9,
		"BucketNotFound": 10,
		"DBIsClosed":     11,
		"Expired":        12,
		"KeyEmpty":       13,
	}
)

func (x NutsDBErr) Enum() *NutsDBErr {
	p := new(NutsDBErr)
	*p = x
	return p
}

func (x NutsDBErr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NutsDBErr) Descriptor() protoreflect.EnumDescriptor {
	return file_nutsdb_v1_nutsdb_proto_enumTypes[0].Descriptor()
}

func (NutsDBErr) Type() protoreflect.EnumType {
	return &file_nutsdb_v1_nutsdb_proto_enumTypes[0]
}

func (x NutsDBErr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NutsDBErr.Descriptor instead.
func (NutsDBErr) EnumDescriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{0}
}

type OpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbName        string `protobuf:"bytes,1,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	ErrIfNotFound bool   `protobuf:"varint,2,opt,name=err_if_not_found,json=errIfNotFound,proto3" json:"err_if_not_found,omitempty"`
}

func (x *OpenRequest) Reset() {
	*x = OpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRequest) ProtoMessage() {}

func (x *OpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRequest.ProtoReflect.Descriptor instead.
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{0}
}

func (x *OpenRequest) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *OpenRequest) GetErrIfNotFound() bool {
	if x != nil {
		return x.ErrIfNotFound
	}
	return false
}

type OpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NutsdbId *v1.IdRaw `protobuf:"bytes,1,opt,name=nutsdb_id,json=nutsdbId,proto3" json:"nutsdb_id,omitempty"`
}

func (x *OpenResponse) Reset() {
	*x = OpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenResponse) ProtoMessage() {}

func (x *OpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenResponse.ProtoReflect.Descriptor instead.
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{1}
}

func (x *OpenResponse) GetNutsdbId() *v1.IdRaw {
	if x != nil {
		return x.NutsdbId
	}
	return nil
}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NutsdbId *v1.IdRaw `protobuf:"bytes,1,opt,name=nutsdb_id,json=nutsdbId,proto3" json:"nutsdb_id,omitempty"`
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{2}
}

func (x *CloseRequest) GetNutsdbId() *v1.IdRaw {
	if x != nil {
		return x.NutsdbId
	}
	return nil
}

type CloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{3}
}

// Pair is a bit of a misnomer because this also includes the bucket path.
type Pair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketPath string `protobuf:"bytes,1,opt,name=bucket_path,json=bucketPath,proto3" json:"bucket_path,omitempty"`
	Key        []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value      []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Pair) Reset() {
	*x = Pair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pair) ProtoMessage() {}

func (x *Pair) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pair.ProtoReflect.Descriptor instead.
func (*Pair) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{4}
}

func (x *Pair) GetBucketPath() string {
	if x != nil {
		return x.BucketPath
	}
	return ""
}

func (x *Pair) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Pair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// ReadPairRequest requests a read of the key in the pair. If the key is not
// found and there is a value in the pair's value, that value is used for
// the response and there is no error returned.
type ReadPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NutsdbId *v1.IdRaw `protobuf:"bytes,1,opt,name=nutsdb_id,json=nutsdbId,proto3" json:"nutsdb_id,omitempty"`
	Pair     *Pair     `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *ReadPairRequest) Reset() {
	*x = ReadPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPairRequest) ProtoMessage() {}

func (x *ReadPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPairRequest.ProtoReflect.Descriptor instead.
func (*ReadPairRequest) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{5}
}

func (x *ReadPairRequest) GetNutsdbId() *v1.IdRaw {
	if x != nil {
		return x.NutsdbId
	}
	return nil
}

func (x *ReadPairRequest) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

// ReadPairResponse returns the value of a requested key in the response.
// It defaults to using the value given in the response if the key is
// not found.
type ReadPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NutsdbId *v1.IdRaw `protobuf:"bytes,1,opt,name=nutsdb_id,json=nutsdbId,proto3" json:"nutsdb_id,omitempty"`
	Pair     *Pair     `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *ReadPairResponse) Reset() {
	*x = ReadPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPairResponse) ProtoMessage() {}

func (x *ReadPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPairResponse.ProtoReflect.Descriptor instead.
func (*ReadPairResponse) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{6}
}

func (x *ReadPairResponse) GetNutsdbId() *v1.IdRaw {
	if x != nil {
		return x.NutsdbId
	}
	return nil
}

func (x *ReadPairResponse) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

// WritePairRequest requests a write or overwrite of the key in the pair.
type WritePairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NutsdbId *v1.IdRaw `protobuf:"bytes,1,opt,name=nutsdb_id,json=nutsdbId,proto3" json:"nutsdb_id,omitempty"`
	Pair     *Pair     `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *WritePairRequest) Reset() {
	*x = WritePairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WritePairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritePairRequest) ProtoMessage() {}

func (x *WritePairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritePairRequest.ProtoReflect.Descriptor instead.
func (*WritePairRequest) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{7}
}

func (x *WritePairRequest) GetNutsdbId() *v1.IdRaw {
	if x != nil {
		return x.NutsdbId
	}
	return nil
}

func (x *WritePairRequest) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

// WritePairesponse echos back the requested values on success.
type WritePairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NutsdbId *v1.IdRaw `protobuf:"bytes,1,opt,name=nutsdb_id,json=nutsdbId,proto3" json:"nutsdb_id,omitempty"`
	Pair     *Pair     `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *WritePairResponse) Reset() {
	*x = WritePairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WritePairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritePairResponse) ProtoMessage() {}

func (x *WritePairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritePairResponse.ProtoReflect.Descriptor instead.
func (*WritePairResponse) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{8}
}

func (x *WritePairResponse) GetNutsdbId() *v1.IdRaw {
	if x != nil {
		return x.NutsdbId
	}
	return nil
}

func (x *WritePairResponse) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

// DeletePairRequest requests the removal of a key value pair.  The value passed
// in the pair is ignored. The flag err_not_found can be used to cause an
// error to be returned if the key does not exist, since the default is to
// ignore such a request.
type DeletePairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NutsdbId    *v1.IdRaw `protobuf:"bytes,1,opt,name=nutsdb_id,json=nutsdbId,proto3" json:"nutsdb_id,omitempty"`
	Pair        *Pair     `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	ErrNotFound bool      `protobuf:"varint,3,opt,name=err_not_found,json=errNotFound,proto3" json:"err_not_found,omitempty"`
}

func (x *DeletePairRequest) Reset() {
	*x = DeletePairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePairRequest) ProtoMessage() {}

func (x *DeletePairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePairRequest.ProtoReflect.Descriptor instead.
func (*DeletePairRequest) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePairRequest) GetNutsdbId() *v1.IdRaw {
	if x != nil {
		return x.NutsdbId
	}
	return nil
}

func (x *DeletePairRequest) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

func (x *DeletePairRequest) GetErrNotFound() bool {
	if x != nil {
		return x.ErrNotFound
	}
	return false
}

// DeletePairResponse echos back the deleted pair value on success.
type DeletePairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NutsdbId *v1.IdRaw `protobuf:"bytes,1,opt,name=nutsdb_id,json=nutsdbId,proto3" json:"nutsdb_id,omitempty"`
	Pair     *Pair     `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *DeletePairResponse) Reset() {
	*x = DeletePairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePairResponse) ProtoMessage() {}

func (x *DeletePairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePairResponse.ProtoReflect.Descriptor instead.
func (*DeletePairResponse) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePairResponse) GetNutsdbId() *v1.IdRaw {
	if x != nil {
		return x.NutsdbId
	}
	return nil
}

func (x *DeletePairResponse) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

// CreateBucketRequest is used to add a child bucket to a given parent.
type CreateBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentPath string `protobuf:"bytes,1,opt,name=parent_path,json=parentPath,proto3" json:"parent_path,omitempty"` // "/" is always a valid parent path
	NewChild   string `protobuf:"bytes,2,opt,name=new_child,json=newChild,proto3" json:"new_child,omitempty"`
}

func (x *CreateBucketRequest) Reset() {
	*x = CreateBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketRequest) ProtoMessage() {}

func (x *CreateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{11}
}

func (x *CreateBucketRequest) GetParentPath() string {
	if x != nil {
		return x.ParentPath
	}
	return ""
}

func (x *CreateBucketRequest) GetNewChild() string {
	if x != nil {
		return x.NewChild
	}
	return ""
}

// CreateBucketResponse is used to indicate a create success.  The values
// of the request are echoed back in the response.
type CreateBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentPath string `protobuf:"bytes,1,opt,name=parent_path,json=parentPath,proto3" json:"parent_path,omitempty"`
	NewChild   string `protobuf:"bytes,2,opt,name=new_child,json=newChild,proto3" json:"new_child,omitempty"`
}

func (x *CreateBucketResponse) Reset() {
	*x = CreateBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketResponse) ProtoMessage() {}

func (x *CreateBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketResponse) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{12}
}

func (x *CreateBucketResponse) GetParentPath() string {
	if x != nil {
		return x.ParentPath
	}
	return ""
}

func (x *CreateBucketResponse) GetNewChild() string {
	if x != nil {
		return x.NewChild
	}
	return ""
}

// DeleteBucketRequest is used to delete a child bucket from a given parent.
type DeleteBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentPath    string `protobuf:"bytes,1,opt,name=parent_path,json=parentPath,proto3" json:"parent_path,omitempty"` // "/" is always a valid parent path
	ChildToDelete string `protobuf:"bytes,2,opt,name=child_to_delete,json=childToDelete,proto3" json:"child_to_delete,omitempty"`
}

func (x *DeleteBucketRequest) Reset() {
	*x = DeleteBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketRequest) ProtoMessage() {}

func (x *DeleteBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketRequest.ProtoReflect.Descriptor instead.
func (*DeleteBucketRequest) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteBucketRequest) GetParentPath() string {
	if x != nil {
		return x.ParentPath
	}
	return ""
}

func (x *DeleteBucketRequest) GetChildToDelete() string {
	if x != nil {
		return x.ChildToDelete
	}
	return ""
}

// DeleteBucketResponse is used to indicate a delete success.  The values
// of the request are echoed back in the response.
type DeleteBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentPath    string `protobuf:"bytes,1,opt,name=parent_path,json=parentPath,proto3" json:"parent_path,omitempty"`
	ChildToDelete string `protobuf:"bytes,2,opt,name=child_to_delete,json=childToDelete,proto3" json:"child_to_delete,omitempty"`
}

func (x *DeleteBucketResponse) Reset() {
	*x = DeleteBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketResponse) ProtoMessage() {}

func (x *DeleteBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nutsdb_v1_nutsdb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketResponse.ProtoReflect.Descriptor instead.
func (*DeleteBucketResponse) Descriptor() ([]byte, []int) {
	return file_nutsdb_v1_nutsdb_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteBucketResponse) GetParentPath() string {
	if x != nil {
		return x.ParentPath
	}
	return ""
}

func (x *DeleteBucketResponse) GetChildToDelete() string {
	if x != nil {
		return x.ChildToDelete
	}
	return ""
}

var File_nutsdb_v1_nutsdb_proto protoreflect.FileDescriptor

var file_nutsdb_v1_nutsdb_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x75, 0x74, 0x73,
	0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x10, 0x65, 0x72, 0x72, 0x5f, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x49, 0x66,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x43, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x73,
	0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64,
	0x52, 0x61, 0x77, 0x52, 0x08, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x49, 0x64, 0x22, 0x43, 0x0a,
	0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a,
	0x09, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x08, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62,
	0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x04, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x6b, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x73, 0x64,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x61, 0x77, 0x52, 0x08, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04,
	0x70, 0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x75, 0x74,
	0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69,
	0x72, 0x22, 0x6c, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77,
	0x52, 0x08, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61,
	0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x22,
	0x6c, 0x0a, 0x10, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x08,
	0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x22, 0x6d, 0x0a,
	0x11, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x08, 0x6e,
	0x75, 0x74, 0x73, 0x64, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x22, 0x91, 0x01, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61, 0x77, 0x52, 0x08, 0x6e,
	0x75, 0x74, 0x73, 0x64, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x22, 0x6e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x61,
	0x77, 0x52, 0x08, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x70,
	0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x75, 0x74, 0x73,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72,
	0x22, 0x53, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x54, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x5e, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x54, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x5f, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x6f,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x54, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2a, 0xf9, 0x01, 0x0a,
	0x09, 0x4e, 0x75, 0x74, 0x73, 0x44, 0x42, 0x45, 0x72, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x6f,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x6e,
	0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03,
	0x12, 0x11, 0x0a, 0x0d, 0x42, 0x61, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x61, 0x69, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x61, 0x64, 0x44, 0x42, 0x4e, 0x61,
	0x6d, 0x65, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x42, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x61, 0x64, 0x49, 0x64,
	0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x42, 0x49, 0x73, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10,
	0x0d, 0x1a, 0x05, 0xd8, 0x9e, 0x89, 0x02, 0x01, 0x32, 0xd5, 0x02, 0x0a, 0x06, 0x4e, 0x75, 0x74,
	0x73, 0x44, 0x42, 0x12, 0x37, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x6e, 0x75,
	0x74, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64,
	0x50, 0x61, 0x69, 0x72, 0x12, 0x1a, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x09, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1b, 0x2e, 0x6e, 0x75, 0x74,
	0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x1c, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x68, 0x2f, 0x70, 0x61, 0x72, 0x69, 0x67, 0x6f, 0x74, 0x2f,
	0x67, 0x2f, 0x6e, 0x75, 0x74, 0x73, 0x64, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x75, 0x74, 0x73,
	0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nutsdb_v1_nutsdb_proto_rawDescOnce sync.Once
	file_nutsdb_v1_nutsdb_proto_rawDescData = file_nutsdb_v1_nutsdb_proto_rawDesc
)

func file_nutsdb_v1_nutsdb_proto_rawDescGZIP() []byte {
	file_nutsdb_v1_nutsdb_proto_rawDescOnce.Do(func() {
		file_nutsdb_v1_nutsdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_nutsdb_v1_nutsdb_proto_rawDescData)
	})
	return file_nutsdb_v1_nutsdb_proto_rawDescData
}

var file_nutsdb_v1_nutsdb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nutsdb_v1_nutsdb_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_nutsdb_v1_nutsdb_proto_goTypes = []interface{}{
	(NutsDBErr)(0),               // 0: nutsdb.v1.NutsDBErr
	(*OpenRequest)(nil),          // 1: nutsdb.v1.OpenRequest
	(*OpenResponse)(nil),         // 2: nutsdb.v1.OpenResponse
	(*CloseRequest)(nil),         // 3: nutsdb.v1.CloseRequest
	(*CloseResponse)(nil),        // 4: nutsdb.v1.CloseResponse
	(*Pair)(nil),                 // 5: nutsdb.v1.Pair
	(*ReadPairRequest)(nil),      // 6: nutsdb.v1.ReadPairRequest
	(*ReadPairResponse)(nil),     // 7: nutsdb.v1.ReadPairResponse
	(*WritePairRequest)(nil),     // 8: nutsdb.v1.WritePairRequest
	(*WritePairResponse)(nil),    // 9: nutsdb.v1.WritePairResponse
	(*DeletePairRequest)(nil),    // 10: nutsdb.v1.DeletePairRequest
	(*DeletePairResponse)(nil),   // 11: nutsdb.v1.DeletePairResponse
	(*CreateBucketRequest)(nil),  // 12: nutsdb.v1.CreateBucketRequest
	(*CreateBucketResponse)(nil), // 13: nutsdb.v1.CreateBucketResponse
	(*DeleteBucketRequest)(nil),  // 14: nutsdb.v1.DeleteBucketRequest
	(*DeleteBucketResponse)(nil), // 15: nutsdb.v1.DeleteBucketResponse
	(*v1.IdRaw)(nil),             // 16: protosupport.v1.IdRaw
}
var file_nutsdb_v1_nutsdb_proto_depIdxs = []int32{
	16, // 0: nutsdb.v1.OpenResponse.nutsdb_id:type_name -> protosupport.v1.IdRaw
	16, // 1: nutsdb.v1.CloseRequest.nutsdb_id:type_name -> protosupport.v1.IdRaw
	16, // 2: nutsdb.v1.ReadPairRequest.nutsdb_id:type_name -> protosupport.v1.IdRaw
	5,  // 3: nutsdb.v1.ReadPairRequest.pair:type_name -> nutsdb.v1.Pair
	16, // 4: nutsdb.v1.ReadPairResponse.nutsdb_id:type_name -> protosupport.v1.IdRaw
	5,  // 5: nutsdb.v1.ReadPairResponse.pair:type_name -> nutsdb.v1.Pair
	16, // 6: nutsdb.v1.WritePairRequest.nutsdb_id:type_name -> protosupport.v1.IdRaw
	5,  // 7: nutsdb.v1.WritePairRequest.pair:type_name -> nutsdb.v1.Pair
	16, // 8: nutsdb.v1.WritePairResponse.nutsdb_id:type_name -> protosupport.v1.IdRaw
	5,  // 9: nutsdb.v1.WritePairResponse.pair:type_name -> nutsdb.v1.Pair
	16, // 10: nutsdb.v1.DeletePairRequest.nutsdb_id:type_name -> protosupport.v1.IdRaw
	5,  // 11: nutsdb.v1.DeletePairRequest.pair:type_name -> nutsdb.v1.Pair
	16, // 12: nutsdb.v1.DeletePairResponse.nutsdb_id:type_name -> protosupport.v1.IdRaw
	5,  // 13: nutsdb.v1.DeletePairResponse.pair:type_name -> nutsdb.v1.Pair
	1,  // 14: nutsdb.v1.NutsDB.Open:input_type -> nutsdb.v1.OpenRequest
	3,  // 15: nutsdb.v1.NutsDB.Close:input_type -> nutsdb.v1.CloseRequest
	6,  // 16: nutsdb.v1.NutsDB.ReadPair:input_type -> nutsdb.v1.ReadPairRequest
	8,  // 17: nutsdb.v1.NutsDB.WritePair:input_type -> nutsdb.v1.WritePairRequest
	10, // 18: nutsdb.v1.NutsDB.DeletePair:input_type -> nutsdb.v1.DeletePairRequest
	2,  // 19: nutsdb.v1.NutsDB.Open:output_type -> nutsdb.v1.OpenResponse
	4,  // 20: nutsdb.v1.NutsDB.Close:output_type -> nutsdb.v1.CloseResponse
	7,  // 21: nutsdb.v1.NutsDB.ReadPair:output_type -> nutsdb.v1.ReadPairResponse
	9,  // 22: nutsdb.v1.NutsDB.WritePair:output_type -> nutsdb.v1.WritePairResponse
	11, // 23: nutsdb.v1.NutsDB.DeletePair:output_type -> nutsdb.v1.DeletePairResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_nutsdb_v1_nutsdb_proto_init() }
func file_nutsdb_v1_nutsdb_proto_init() {
	if File_nutsdb_v1_nutsdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nutsdb_v1_nutsdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WritePairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WritePairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nutsdb_v1_nutsdb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nutsdb_v1_nutsdb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nutsdb_v1_nutsdb_proto_goTypes,
		DependencyIndexes: file_nutsdb_v1_nutsdb_proto_depIdxs,
		EnumInfos:         file_nutsdb_v1_nutsdb_proto_enumTypes,
		MessageInfos:      file_nutsdb_v1_nutsdb_proto_msgTypes,
	}.Build()
	File_nutsdb_v1_nutsdb_proto = out.File
	file_nutsdb_v1_nutsdb_proto_rawDesc = nil
	file_nutsdb_v1_nutsdb_proto_goTypes = nil
	file_nutsdb_v1_nutsdb_proto_depIdxs = nil
}
